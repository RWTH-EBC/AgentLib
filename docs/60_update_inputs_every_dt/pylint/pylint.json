{
    "messages": [
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'print-statement' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'parameter-unpacking' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'unpacking-in-except' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'old-raise-syntax' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'backtick' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'import-star-module-level' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'apply-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'basestring-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'buffer-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'cmp-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'coerce-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'execfile-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'file-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'long-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'raw_input-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'reduce-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'standarderror-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'unicode-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'xrange-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'coerce-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'delslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'getslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'setslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'no-absolute-import' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'old-division' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-iter-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-view-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'next-method-called' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'metaclass-assignment' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'indexing-exception' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'raising-string' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'reload-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'oct-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'hex-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'nonzero-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'cmp-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'input-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'round-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'intern-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'unichr-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'map-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'zip-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'range-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'filter-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'using-cmp-argument' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'div-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'idiv-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'rdiv-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'exception-message-attribute' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'invalid-str-codec' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'sys-max-int' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'bad-python3-import' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-string-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-str-translate-call' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-itertools-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-types-field' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'next-method-defined' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-items-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-keys-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-values-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-operator-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-urllib-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'xreadlines-attribute' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-sys-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'exception-escape' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'comprehension-escape' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'no-self-use' was moved to an optional extension, see https://pylint.readthedocs.io/en/latest/whatsnew/2/2.14/summary.html#removed-checkers.",
            "message-id": "R0022"
        },
        {
            "type": "warning",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'long-suffix'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'old-ne-operator'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'old-octal-literal'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'non-ascii-bytes-literal'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/home/runner/work/AgentLib/AgentLib/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'eq-without-hash'",
            "message-id": "W0012"
        },
        {
            "type": "fatal",
            "module": "agentlib.modules.communicator.communicator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/communicator/communicator.py",
            "symbol": "astroid-error",
            "message": "agentlib/modules/communicator/communicator.py: Fatal error while checking 'agentlib/modules/communicator/communicator.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-23.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib.modules.simulation.simulator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/simulation/simulator.py",
            "symbol": "astroid-error",
            "message": "agentlib/modules/simulation/simulator.py: Fatal error while checking 'agentlib/modules/simulation/simulator.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-24.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "examples.models.scipy.scipy_example",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "examples/models/scipy/scipy_example.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "examples.models.scipy.scipy_example",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/models/scipy/scipy_example.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "examples.models.scipy.scipy_example",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "examples/models/scipy/scipy_example.py",
            "symbol": "invalid-name",
            "message": "Constant name \"C_p\" doesn't conform to UPPER_CASE naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "examples.models.scipy.scipy_example",
            "obj": "run_example",
            "line": 43,
            "column": 0,
            "path": "examples/models/scipy/scipy_example.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "examples.models.scipy.scipy_example",
            "obj": "run_example",
            "line": 53,
            "column": 8,
            "path": "examples/models/scipy/scipy_example.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (matplotlib.pyplot)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "examples.models.scipy.scipy_example",
            "obj": "run_example",
            "line": 53,
            "column": 8,
            "path": "examples/models/scipy/scipy_example.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.pyplot'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.pingpong.pingpong_mqtt",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/multi-agent-systems/pingpong/pingpong_mqtt.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.pingpong.pingpong_local",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/multi-agent-systems/pingpong/pingpong_local.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.pingpong.pingpong_module",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/multi-agent-systems/pingpong/pingpong_module.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "examples.multi-agent-systems.pingpong.pingpong_module",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "examples/multi-agent-systems/pingpong/pingpong_module.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.pingpong.pingpong_module",
            "obj": "PingPongConfig",
            "line": 11,
            "column": 0,
            "path": "examples/multi-agent-systems/pingpong/pingpong_module.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.pingpong.pingpong_module",
            "obj": "PingPong",
            "line": 20,
            "column": 0,
            "path": "examples/multi-agent-systems/pingpong/pingpong_module.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.pingpong.pingpong_clonemap",
            "obj": "",
            "line": 29,
            "column": 0,
            "path": "examples/multi-agent-systems/pingpong/pingpong_clonemap.py",
            "symbol": "line-too-long",
            "message": "Line too long (266/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.pingpong.pingpong_clonemap",
            "obj": "",
            "line": 37,
            "column": 0,
            "path": "examples/multi-agent-systems/pingpong/pingpong_clonemap.py",
            "symbol": "line-too-long",
            "message": "Line too long (234/100)",
            "message-id": "C0301"
        },
        {
            "type": "warning",
            "module": "examples.multi-agent-systems.pingpong.pingpong_clonemap",
            "obj": "",
            "line": 6,
            "column": 17,
            "path": "examples/multi-agent-systems/pingpong/pingpong_clonemap.py",
            "symbol": "anomalous-backslash-in-string",
            "message": "Anomalous backslash in string: '\\e'. String constant might be missing an r prefix.",
            "message-id": "W1401"
        },
        {
            "type": "warning",
            "module": "examples.multi-agent-systems.pingpong.pingpong_clonemap",
            "obj": "",
            "line": 6,
            "column": 26,
            "path": "examples/multi-agent-systems/pingpong/pingpong_clonemap.py",
            "symbol": "anomalous-backslash-in-string",
            "message": "Anomalous backslash in string: '\\m'. String constant might be missing an r prefix.",
            "message-id": "W1401"
        },
        {
            "type": "warning",
            "module": "examples.multi-agent-systems.pingpong.pingpong_clonemap",
            "obj": "",
            "line": 6,
            "column": 46,
            "path": "examples/multi-agent-systems/pingpong/pingpong_clonemap.py",
            "symbol": "anomalous-backslash-in-string",
            "message": "Anomalous backslash in string: '\\p'. String constant might be missing an r prefix.",
            "message-id": "W1401"
        },
        {
            "type": "warning",
            "module": "examples.multi-agent-systems.pingpong.pingpong_clonemap",
            "obj": "",
            "line": 6,
            "column": 55,
            "path": "examples/multi-agent-systems/pingpong/pingpong_clonemap.py",
            "symbol": "anomalous-backslash-in-string",
            "message": "Anomalous backslash in string: '\\D'. String constant might be missing an r prefix.",
            "message-id": "W1401"
        },
        {
            "type": "error",
            "module": "examples.multi-agent-systems.pingpong.pingpong_clonemap",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "examples/multi-agent-systems/pingpong/pingpong_clonemap.py",
            "symbol": "import-error",
            "message": "Unable to import 'requests'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "examples.multi-agent-systems.pingpong.pingpong_clonemap",
            "obj": "",
            "line": 16,
            "column": 4,
            "path": "examples/multi-agent-systems/pingpong/pingpong_clonemap.py",
            "symbol": "consider-using-from-import",
            "message": "Use 'from clonemapy import ams' instead",
            "message-id": "R0402"
        },
        {
            "type": "error",
            "module": "examples.multi-agent-systems.pingpong.pingpong_clonemap",
            "obj": "",
            "line": 16,
            "column": 4,
            "path": "examples/multi-agent-systems/pingpong/pingpong_clonemap.py",
            "symbol": "import-error",
            "message": "Unable to import 'clonemapy.ams'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "examples.multi-agent-systems.pingpong.pingpong_clonemap",
            "obj": "",
            "line": 20,
            "column": 9,
            "path": "examples/multi-agent-systems/pingpong/pingpong_clonemap.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.pingpong.pingpong_clonemap",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "examples/multi-agent-systems/pingpong/pingpong_clonemap.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from pathlib import Path\" should be placed before \"import requests\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.room_mas.t_sample_simulation_demonstration",
            "obj": "",
            "line": 129,
            "column": 0,
            "path": "examples/multi-agent-systems/room_mas/t_sample_simulation_demonstration.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.room_mas.t_sample_simulation_demonstration",
            "obj": "",
            "line": 130,
            "column": 0,
            "path": "examples/multi-agent-systems/room_mas/t_sample_simulation_demonstration.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "warning",
            "module": "examples.multi-agent-systems.room_mas.t_sample_simulation_demonstration",
            "obj": "",
            "line": 145,
            "column": 14,
            "path": "examples/multi-agent-systems/room_mas/t_sample_simulation_demonstration.py",
            "symbol": "anomalous-backslash-in-string",
            "message": "Anomalous backslash in string: '\\D'. String constant might be missing an r prefix.",
            "message-id": "W1401"
        },
        {
            "type": "warning",
            "module": "examples.multi-agent-systems.room_mas.t_sample_simulation_demonstration",
            "obj": "",
            "line": 145,
            "column": 23,
            "path": "examples/multi-agent-systems/room_mas/t_sample_simulation_demonstration.py",
            "symbol": "anomalous-backslash-in-string",
            "message": "Anomalous backslash in string: '\\m'. String constant might be missing an r prefix.",
            "message-id": "W1401"
        },
        {
            "type": "warning",
            "module": "examples.multi-agent-systems.room_mas.t_sample_simulation_demonstration",
            "obj": "",
            "line": 145,
            "column": 42,
            "path": "examples/multi-agent-systems/room_mas/t_sample_simulation_demonstration.py",
            "symbol": "anomalous-backslash-in-string",
            "message": "Anomalous backslash in string: '\\D'. String constant might be missing an r prefix.",
            "message-id": "W1401"
        },
        {
            "type": "warning",
            "module": "examples.multi-agent-systems.room_mas.t_sample_simulation_demonstration",
            "obj": "",
            "line": 145,
            "column": 51,
            "path": "examples/multi-agent-systems/room_mas/t_sample_simulation_demonstration.py",
            "symbol": "anomalous-backslash-in-string",
            "message": "Anomalous backslash in string: '\\m'. String constant might be missing an r prefix.",
            "message-id": "W1401"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.room_mas.t_sample_simulation_demonstration",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/multi-agent-systems/room_mas/t_sample_simulation_demonstration.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "examples.multi-agent-systems.room_mas.t_sample_simulation_demonstration",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "examples/multi-agent-systems/room_mas/t_sample_simulation_demonstration.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "examples.multi-agent-systems.room_mas.t_sample_simulation_demonstration",
            "obj": "run_example",
            "line": 66,
            "column": 0,
            "path": "examples/multi-agent-systems/room_mas/t_sample_simulation_demonstration.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (20/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.room_mas.t_sample_simulation_demonstration",
            "obj": "run_example",
            "line": 117,
            "column": 4,
            "path": "examples/multi-agent-systems/room_mas/t_sample_simulation_demonstration.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (matplotlib.pyplot)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "examples.multi-agent-systems.room_mas.t_sample_simulation_demonstration",
            "obj": "run_example",
            "line": 117,
            "column": 4,
            "path": "examples/multi-agent-systems/room_mas/t_sample_simulation_demonstration.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.pyplot'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.room_mas.room_mas",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "examples/multi-agent-systems/room_mas/room_mas.py",
            "symbol": "line-too-long",
            "message": "Line too long (110/100)",
            "message-id": "C0301"
        },
        {
            "type": "warning",
            "module": "examples.multi-agent-systems.room_mas.room_mas",
            "obj": "",
            "line": 91,
            "column": 28,
            "path": "examples/multi-agent-systems/room_mas/room_mas.py",
            "symbol": "anomalous-backslash-in-string",
            "message": "Anomalous backslash in string: '\\d'. String constant might be missing an r prefix.",
            "message-id": "W1401"
        },
        {
            "type": "warning",
            "module": "examples.multi-agent-systems.room_mas.room_mas",
            "obj": "",
            "line": 91,
            "column": 41,
            "path": "examples/multi-agent-systems/room_mas/room_mas.py",
            "symbol": "anomalous-backslash-in-string",
            "message": "Anomalous backslash in string: '\\,'. String constant might be missing an r prefix.",
            "message-id": "W1401"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.room_mas.room_mas",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/multi-agent-systems/room_mas/room_mas.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "examples.multi-agent-systems.room_mas.room_mas",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "examples/multi-agent-systems/room_mas/room_mas.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.ticker'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "examples.multi-agent-systems.room_mas.room_mas",
            "obj": "run_example",
            "line": 11,
            "column": 0,
            "path": "examples/multi-agent-systems/room_mas/room_mas.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (16/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.room_mas.room_mas",
            "obj": "run_example",
            "line": 65,
            "column": 4,
            "path": "examples/multi-agent-systems/room_mas/room_mas.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (matplotlib.pyplot)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "examples.multi-agent-systems.room_mas.room_mas",
            "obj": "run_example",
            "line": 65,
            "column": 4,
            "path": "examples/multi-agent-systems/room_mas/room_mas.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.pyplot'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "examples.multi-agent-systems.room_mas.room_mas",
            "obj": "run_example",
            "line": 98,
            "column": 8,
            "path": "examples/multi-agent-systems/room_mas/room_mas.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ax\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "examples.multi-agent-systems.room_mas.room_mas",
            "obj": "run_example",
            "line": 67,
            "column": 4,
            "path": "examples/multi-agent-systems/room_mas/room_mas.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'fig'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_1_my_first_agent_with_comments",
            "obj": "MyFirstModuleConfig",
            "line": 18,
            "column": 0,
            "path": "examples/getting-started/part_1_my_first_agent_with_comments.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_1_my_first_agent_with_comments",
            "obj": "MyFirstModule",
            "line": 23,
            "column": 0,
            "path": "examples/getting-started/part_1_my_first_agent_with_comments.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "examples.getting-started.part_1_my_first_agent_with_comments",
            "obj": "MyFirstModule.process",
            "line": 32,
            "column": 12,
            "path": "examples/getting-started/part_1_my_first_agent_with_comments.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_1_my_first_agent_with_comments",
            "obj": "main",
            "line": 70,
            "column": 0,
            "path": "examples/getting-started/part_1_my_first_agent_with_comments.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "error",
            "module": "examples.getting-started.part_1_my_first_agent_with_comments",
            "obj": "main",
            "line": 87,
            "column": 4,
            "path": "examples/getting-started/part_1_my_first_agent_with_comments.py",
            "symbol": "no-member",
            "message": "Instance of 'Environment' has no 'run' member",
            "message-id": "E1101"
        },
        {
            "type": "warning",
            "module": "examples.getting-started.part_1_my_first_agent_with_comments",
            "obj": "main",
            "line": 84,
            "column": 4,
            "path": "examples/getting-started/part_1_my_first_agent_with_comments.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'agent'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_1_my_first_agent_concise",
            "obj": "MyFirstModuleConfig",
            "line": 17,
            "column": 0,
            "path": "examples/getting-started/part_1_my_first_agent_concise.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_1_my_first_agent_concise",
            "obj": "MyFirstModule",
            "line": 22,
            "column": 0,
            "path": "examples/getting-started/part_1_my_first_agent_concise.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "examples.getting-started.part_1_my_first_agent_concise",
            "obj": "MyFirstModule.process",
            "line": 27,
            "column": 12,
            "path": "examples/getting-started/part_1_my_first_agent_concise.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_1_my_first_agent_concise",
            "obj": "main",
            "line": 45,
            "column": 0,
            "path": "examples/getting-started/part_1_my_first_agent_concise.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "error",
            "module": "examples.getting-started.part_1_my_first_agent_concise",
            "obj": "main",
            "line": 50,
            "column": 4,
            "path": "examples/getting-started/part_1_my_first_agent_concise.py",
            "symbol": "no-member",
            "message": "Instance of 'Environment' has no 'run' member",
            "message-id": "E1101"
        },
        {
            "type": "warning",
            "module": "examples.getting-started.part_1_my_first_agent_concise",
            "obj": "main",
            "line": 49,
            "column": 4,
            "path": "examples/getting-started/part_1_my_first_agent_concise.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'agent'",
            "message-id": "W0612"
        },
        {
            "type": "fatal",
            "module": "examples.getting-started.part_4_communicators_with_comments",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/getting-started/part_4_communicators_with_comments.py",
            "symbol": "astroid-error",
            "message": "examples/getting-started/part_4_communicators_with_comments.py: Fatal error while checking 'examples/getting-started/part_4_communicators_with_comments.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-24.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_3_using_models_with_comments",
            "obj": "",
            "line": 147,
            "column": 0,
            "path": "examples/getting-started/part_3_using_models_with_comments.py",
            "symbol": "line-too-long",
            "message": "Line too long (117/100)",
            "message-id": "C0301"
        },
        {
            "type": "fatal",
            "module": "examples.getting-started.part_3_using_models_with_comments",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/getting-started/part_3_using_models_with_comments.py",
            "symbol": "astroid-error",
            "message": "examples/getting-started/part_3_using_models_with_comments.py: Fatal error while checking 'examples/getting-started/part_3_using_models_with_comments.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-24.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_2_agentvariables_with_comments",
            "obj": "",
            "line": 44,
            "column": 0,
            "path": "examples/getting-started/part_2_agentvariables_with_comments.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_2_agentvariables_with_comments",
            "obj": "MyModuleConfig",
            "line": 16,
            "column": 0,
            "path": "examples/getting-started/part_2_agentvariables_with_comments.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_2_agentvariables_with_comments",
            "obj": "MyModule",
            "line": 21,
            "column": 0,
            "path": "examples/getting-started/part_2_agentvariables_with_comments.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "examples.getting-started.part_2_agentvariables_with_comments",
            "obj": "MyModule.process",
            "line": 43,
            "column": 12,
            "path": "examples/getting-started/part_2_agentvariables_with_comments.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_2_agentvariables_with_comments",
            "obj": "main",
            "line": 90,
            "column": 0,
            "path": "examples/getting-started/part_2_agentvariables_with_comments.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "error",
            "module": "examples.getting-started.part_2_agentvariables_with_comments",
            "obj": "main",
            "line": 96,
            "column": 4,
            "path": "examples/getting-started/part_2_agentvariables_with_comments.py",
            "symbol": "no-member",
            "message": "Instance of 'Environment' has no 'run' member",
            "message-id": "E1101"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_2_agentvariables_with_comments",
            "obj": "main",
            "line": 99,
            "column": 8,
            "path": "examples/getting-started/part_2_agentvariables_with_comments.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (matplotlib.pyplot)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "examples.getting-started.part_2_agentvariables_with_comments",
            "obj": "main",
            "line": 99,
            "column": 8,
            "path": "examples/getting-started/part_2_agentvariables_with_comments.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.pyplot'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_2_agentvariables_with_comments",
            "obj": "main",
            "line": 100,
            "column": 8,
            "path": "examples/getting-started/part_2_agentvariables_with_comments.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (pandas)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "examples.getting-started.part_2_agentvariables_with_comments",
            "obj": "main",
            "line": 100,
            "column": 8,
            "path": "examples/getting-started/part_2_agentvariables_with_comments.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_2_agentvariables_with_comments",
            "obj": "alternate_process",
            "line": 121,
            "column": 4,
            "path": "examples/getting-started/part_2_agentvariables_with_comments.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "fatal",
            "module": "examples.getting-started.part_3_using_models_concise",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/getting-started/part_3_using_models_concise.py",
            "symbol": "astroid-error",
            "message": "examples/getting-started/part_3_using_models_concise.py: Fatal error while checking 'examples/getting-started/part_3_using_models_concise.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-24.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_2_agentvariables_concise",
            "obj": "",
            "line": 30,
            "column": 0,
            "path": "examples/getting-started/part_2_agentvariables_concise.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_2_agentvariables_concise",
            "obj": "MyModuleConfig",
            "line": 16,
            "column": 0,
            "path": "examples/getting-started/part_2_agentvariables_concise.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_2_agentvariables_concise",
            "obj": "MyModule",
            "line": 21,
            "column": 0,
            "path": "examples/getting-started/part_2_agentvariables_concise.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "examples.getting-started.part_2_agentvariables_concise",
            "obj": "MyModule.process",
            "line": 29,
            "column": 12,
            "path": "examples/getting-started/part_2_agentvariables_concise.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_2_agentvariables_concise",
            "obj": "main",
            "line": 51,
            "column": 0,
            "path": "examples/getting-started/part_2_agentvariables_concise.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "error",
            "module": "examples.getting-started.part_2_agentvariables_concise",
            "obj": "main",
            "line": 57,
            "column": 4,
            "path": "examples/getting-started/part_2_agentvariables_concise.py",
            "symbol": "no-member",
            "message": "Instance of 'Environment' has no 'run' member",
            "message-id": "E1101"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_2_agentvariables_concise",
            "obj": "main",
            "line": 60,
            "column": 8,
            "path": "examples/getting-started/part_2_agentvariables_concise.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (matplotlib.pyplot)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "examples.getting-started.part_2_agentvariables_concise",
            "obj": "main",
            "line": 60,
            "column": 8,
            "path": "examples/getting-started/part_2_agentvariables_concise.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.pyplot'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "examples.getting-started.part_2_agentvariables_concise",
            "obj": "main",
            "line": 61,
            "column": 8,
            "path": "examples/getting-started/part_2_agentvariables_concise.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (pandas)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "examples.getting-started.part_2_agentvariables_concise",
            "obj": "main",
            "line": 61,
            "column": 8,
            "path": "examples/getting-started/part_2_agentvariables_concise.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "examples.communicator.mqtt",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/communicator/mqtt.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "examples.communicator.mqtt",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "examples/communicator/mqtt.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "examples.communicator.mqtt",
            "obj": "callback",
            "line": 29,
            "column": 4,
            "path": "examples/communicator/mqtt.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "examples.communicator.mqtt",
            "obj": "simulated_output",
            "line": 32,
            "column": 4,
            "path": "examples/communicator/mqtt.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "error",
            "module": "examples.communicator.mqtt",
            "obj": "simulated_output",
            "line": 33,
            "column": 14,
            "path": "examples/communicator/mqtt.py",
            "symbol": "no-member",
            "message": "Instance of 'Environment' has no 'timeout' member",
            "message-id": "E1101"
        },
        {
            "type": "error",
            "module": "examples.communicator.mqtt",
            "obj": "simulated_output",
            "line": 38,
            "column": 29,
            "path": "examples/communicator/mqtt.py",
            "symbol": "no-member",
            "message": "Instance of 'Environment' has no 'now' member",
            "message-id": "E1101"
        },
        {
            "type": "error",
            "module": "examples.communicator.mqtt",
            "obj": "simulated_output",
            "line": 43,
            "column": 18,
            "path": "examples/communicator/mqtt.py",
            "symbol": "no-member",
            "message": "Instance of 'Environment' has no 'timeout' member",
            "message-id": "E1101"
        },
        {
            "type": "convention",
            "module": "examples.simulation.csv_data_source",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/simulation/csv_data_source.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "examples.simulation.csv_data_source",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "examples/simulation/csv_data_source.py",
            "symbol": "import-error",
            "message": "Unable to import 'matplotlib.pyplot'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "examples.simulation.csv_data_source",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "examples/simulation/csv_data_source.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "examples.simulation.csv_data_source",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "examples/simulation/csv_data_source.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "examples.simulation.csv_data_source",
            "obj": "create_sample_data",
            "line": 11,
            "column": 0,
            "path": "examples/simulation/csv_data_source.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "examples.simulation.csv_data_source",
            "obj": "run_example",
            "line": 22,
            "column": 0,
            "path": "examples/simulation/csv_data_source.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "error",
            "module": "examples.simulation.csv_data_source",
            "obj": "run_example",
            "line": 54,
            "column": 4,
            "path": "examples/simulation/csv_data_source.py",
            "symbol": "no-member",
            "message": "Instance of 'Environment' has no 'run' member",
            "message-id": "E1101"
        },
        {
            "type": "convention",
            "module": "examples.simulation.csv_data_source",
            "obj": "plot",
            "line": 63,
            "column": 0,
            "path": "examples/simulation/csv_data_source.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "examples.simulation.csv_data_source",
            "obj": "plot",
            "line": 69,
            "column": 4,
            "path": "examples/simulation/csv_data_source.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'fig'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "examples.plugin.main",
            "obj": "main",
            "line": 24,
            "column": 0,
            "path": "examples/plugin/main.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "examples.plugin.my_plugin.new_module",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/plugin/my_plugin/new_module.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "examples.plugin.my_plugin.new_module",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/plugin/my_plugin/new_module.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "examples.plugin.my_plugin.new_module",
            "obj": "NewModuleConf",
            "line": 6,
            "column": 0,
            "path": "examples/plugin/my_plugin/new_module.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "examples.plugin.my_plugin.new_module",
            "obj": "NewModule",
            "line": 10,
            "column": 0,
            "path": "examples/plugin/my_plugin/new_module.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "examples.plugin.my_plugin.another_new_module",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/plugin/my_plugin/another_new_module.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "examples.plugin.my_plugin.another_new_module",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/plugin/my_plugin/another_new_module.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "examples.plugin.my_plugin.another_new_module",
            "obj": "NewModuleConf2",
            "line": 6,
            "column": 0,
            "path": "examples/plugin/my_plugin/another_new_module.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "examples.plugin.my_plugin.another_new_module",
            "obj": "NewModule2",
            "line": 10,
            "column": 0,
            "path": "examples/plugin/my_plugin/another_new_module.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "examples.controller.bangbang_with_simulator",
            "obj": "",
            "line": 102,
            "column": 52,
            "path": "examples/controller/bangbang_with_simulator.py",
            "symbol": "anomalous-backslash-in-string",
            "message": "Anomalous backslash in string: '\\d'. String constant might be missing an r prefix.",
            "message-id": "W1401"
        },
        {
            "type": "convention",
            "module": "examples.controller.bangbang_with_simulator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/controller/bangbang_with_simulator.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "examples.controller.bangbang_with_simulator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/controller/bangbang_with_simulator.py",
            "symbol": "astroid-error",
            "message": "examples/controller/bangbang_with_simulator.py: Fatal error while checking 'examples/controller/bangbang_with_simulator.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-25.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "warning",
            "module": "examples.controller.pid_with_simulator",
            "obj": "",
            "line": 114,
            "column": 52,
            "path": "examples/controller/pid_with_simulator.py",
            "symbol": "anomalous-backslash-in-string",
            "message": "Anomalous backslash in string: '\\d'. String constant might be missing an r prefix.",
            "message-id": "W1401"
        },
        {
            "type": "fatal",
            "module": "examples.controller.pid_with_simulator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "examples/controller/pid_with_simulator.py",
            "symbol": "astroid-error",
            "message": "examples/controller/pid_with_simulator.py: Fatal error while checking 'examples/controller/pid_with_simulator.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-25.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "docs.source.manual_labor.tools",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "docs/source/manual_labor/tools.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "docs.source.manual_labor.tools",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "docs/source/manual_labor/tools.py",
            "symbol": "import-error",
            "message": "Unable to import 'attrs'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "docs.source.manual_labor.tools",
            "obj": "make_table_for_agent_variable",
            "line": 5,
            "column": 0,
            "path": "docs/source/manual_labor/tools.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "docs.source.manual_labor.tools",
            "obj": "make_table_for_agent_variable",
            "line": 12,
            "column": 9,
            "path": "docs/source/manual_labor/tools.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "docs.source.manual_labor.tools",
            "obj": "make_table_for_agent_variable",
            "line": 12,
            "column": 43,
            "path": "docs/source/manual_labor/tools.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "tests.test_n_pingpong",
            "obj": "",
            "line": 98,
            "column": 0,
            "path": "tests/test_n_pingpong.py",
            "symbol": "line-too-long",
            "message": "Line too long (118/100)",
            "message-id": "C0301"
        },
        {
            "type": "error",
            "module": "tests.test_n_pingpong",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "tests/test_n_pingpong.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "tests.test_n_pingpong",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "tests/test_n_pingpong.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "tests.test_n_pingpong",
            "obj": "NPingPong.n",
            "line": 60,
            "column": 4,
            "path": "tests/test_n_pingpong.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_n_pingpong",
            "obj": "NPingPong.n",
            "line": 60,
            "column": 4,
            "path": "tests/test_n_pingpong.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"n\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "tests.test_n_pingpong",
            "obj": "TestNPingPong.setUp",
            "line": 93,
            "column": 8,
            "path": "tests/test_n_pingpong.py",
            "symbol": "invalid-name",
            "message": "Attribute name \"n\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "tests.test_n_pingpong",
            "obj": "TestNPingPong.test_local_communicators",
            "line": 101,
            "column": 8,
            "path": "tests/test_n_pingpong.py",
            "symbol": "invalid-name",
            "message": "Variable name \"rt\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "tests.test_n_pingpong",
            "obj": "TestNPingPong.test_local_communicators",
            "line": 103,
            "column": 34,
            "path": "tests/test_n_pingpong.py",
            "symbol": "invalid-name",
            "message": "Variable name \"rt\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "tests.test_n_pingpong",
            "obj": "TestNPingPong.test_multiprocessing_broadcast",
            "line": 117,
            "column": 8,
            "path": "tests/test_n_pingpong.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'broker'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "tests.test_n_pingpong",
            "obj": "TestNPingPong._create_2n_pingpong_agents",
            "line": 130,
            "column": 59,
            "path": "tests/test_n_pingpong.py",
            "symbol": "invalid-name",
            "message": "Argument name \"rt\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "tests.test_agentlogger",
            "obj": "",
            "line": 173,
            "column": 0,
            "path": "tests/test_agentlogger.py",
            "symbol": "missing-final-newline",
            "message": "Final newline missing",
            "message-id": "C0304"
        },
        {
            "type": "convention",
            "module": "tests.test_agentlogger",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_agentlogger.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "tests.test_agentlogger",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "tests/test_agentlogger.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "tests.test_agentlogger",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_agentlogger.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "tests.test_agentlogger",
            "obj": "TestAgentLogger",
            "line": 13,
            "column": 0,
            "path": "tests/test_agentlogger.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "tests.test_agentlogger",
            "obj": "TestAgentLogger.test_logging_values",
            "line": 60,
            "column": 8,
            "path": "tests/test_agentlogger.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _callback_values of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_agentlogger",
            "obj": "TestAgentLogger.test_logging_values",
            "line": 61,
            "column": 8,
            "path": "tests/test_agentlogger.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _log of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_agentlogger",
            "obj": "TestAgentLogger.test_logging_full",
            "line": 79,
            "column": 8,
            "path": "tests/test_agentlogger.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _callback_full of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_agentlogger",
            "obj": "TestAgentLogger.test_logging_full",
            "line": 80,
            "column": 8,
            "path": "tests/test_agentlogger.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _log of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_agentlogger",
            "obj": "TestAgentLogger.test_file_overwrite",
            "line": 95,
            "column": 8,
            "path": "tests/test_agentlogger.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _callback_values of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_agentlogger",
            "obj": "TestAgentLogger.test_file_overwrite",
            "line": 96,
            "column": 8,
            "path": "tests/test_agentlogger.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _log of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_agentlogger",
            "obj": "TestAgentLogger.test_file_overwrite",
            "line": 111,
            "column": 8,
            "path": "tests/test_agentlogger.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _callback_values of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_agentlogger",
            "obj": "TestAgentLogger.test_file_overwrite",
            "line": 112,
            "column": 8,
            "path": "tests/test_agentlogger.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _log of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_agentlogger",
            "obj": "TestAgentLogger.test_cleanup",
            "line": 129,
            "column": 8,
            "path": "tests/test_agentlogger.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _callback_values of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_agentlogger",
            "obj": "TestAgentLogger.test_cleanup",
            "line": 130,
            "column": 8,
            "path": "tests/test_agentlogger.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _log of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_agentlogger",
            "obj": "TestAgentLogger.test_load_from_file",
            "line": 150,
            "column": 12,
            "path": "tests/test_agentlogger.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _callback_values of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_agentlogger",
            "obj": "TestAgentLogger.test_load_from_file",
            "line": 151,
            "column": 8,
            "path": "tests/test_agentlogger.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _log of a client class",
            "message-id": "W0212"
        },
        {
            "type": "convention",
            "module": "tests.test_data_source",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_data_source.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "tests.test_data_source",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "tests/test_data_source.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "tests.test_data_source",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_data_source.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource",
            "line": 15,
            "column": 0,
            "path": "tests/test_data_source.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "refactor",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource",
            "line": 15,
            "column": 0,
            "path": "tests/test_data_source.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (9/7)",
            "message-id": "R0902"
        },
        {
            "type": "convention",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource.create_test_df",
            "line": 35,
            "column": 4,
            "path": "tests/test_data_source.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource.test_datetime_index",
            "line": 50,
            "column": 4,
            "path": "tests/test_data_source.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource.test_float_index",
            "line": 58,
            "column": 4,
            "path": "tests/test_data_source.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource.test_string_number_index",
            "line": 66,
            "column": 4,
            "path": "tests/test_data_source.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource.test_non_convertible_index",
            "line": 74,
            "column": 4,
            "path": "tests/test_data_source.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource.get_data_source_config",
            "line": 81,
            "column": 4,
            "path": "tests/test_data_source.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource.test_data_source_initialization",
            "line": 91,
            "column": 4,
            "path": "tests/test_data_source.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource.test_data_loading",
            "line": 98,
            "column": 4,
            "path": "tests/test_data_source.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource.test_data_offset",
            "line": 104,
            "column": 4,
            "path": "tests/test_data_source.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource.test_interpolation",
            "line": 110,
            "column": 4,
            "path": "tests/test_data_source.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource.test_data_exhaustion",
            "line": 117,
            "column": 4,
            "path": "tests/test_data_source.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource.test_data_exhaustion",
            "line": 121,
            "column": 12,
            "path": "tests/test_data_source.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _get_next_data of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_data_source",
            "obj": "TestCSVDataSource.test_data_exhaustion",
            "line": 122,
            "column": 20,
            "path": "tests/test_data_source.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _get_next_data of a client class",
            "message-id": "W0212"
        },
        {
            "type": "convention",
            "module": "tests.test_communicator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_communicator.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "tests.test_communicator",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "tests/test_communicator.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "tests.test_communicator",
            "obj": "TestCommunicator",
            "line": 23,
            "column": 0,
            "path": "tests/test_communicator.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "tests.test_communicator",
            "obj": "TestCommunicator.test_roundtrip_variable",
            "line": 33,
            "column": 4,
            "path": "tests/test_communicator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_communicator",
            "obj": "TestCommunicator.test_roundtrip_variable",
            "line": 42,
            "column": 16,
            "path": "tests/test_communicator.py",
            "symbol": "unnecessary-dunder-call",
            "message": "Unnecessarily calls dunder method __getattribute__. Access attribute directly or use getattr built-in function.",
            "message-id": "C2801"
        },
        {
            "type": "convention",
            "module": "tests.test_communicator",
            "obj": "TestCommunicator.test_roundtrip_variable",
            "line": 42,
            "column": 50,
            "path": "tests/test_communicator.py",
            "symbol": "unnecessary-dunder-call",
            "message": "Unnecessarily calls dunder method __getattribute__. Access attribute directly or use getattr built-in function.",
            "message-id": "C2801"
        },
        {
            "type": "fatal",
            "module": "tests.test_communicator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_communicator.py",
            "symbol": "astroid-error",
            "message": "tests/test_communicator.py: Fatal error while checking 'tests/test_communicator.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-26.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-position",
            "message": "Import \"import os\" should be placed at the top of the module",
            "message-id": "C0413"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-position",
            "message": "Import \"import shutil\" should be placed at the top of the module",
            "message-id": "C0413"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-position",
            "message": "Import \"import unittest\" should be placed at the top of the module",
            "message-id": "C0413"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-position",
            "message": "Import \"import uuid\" should be placed at the top of the module",
            "message-id": "C0413"
        },
        {
            "type": "error",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-position",
            "message": "Import \"import numpy as np\" should be placed at the top of the module",
            "message-id": "C0413"
        },
        {
            "type": "error",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-position",
            "message": "Import \"import pandas as pd\" should be placed at the top of the module",
            "message-id": "C0413"
        },
        {
            "type": "error",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from pydantic import ValidationError\" should be placed at the top of the module",
            "message-id": "C0413"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from agentlib.core import Agent, Environment, Model, ModelConfig, ModelOutputs, ModelOutput, ModelInput, ModelInputs, datamodels\" should be placed at the top of the module",
            "message-id": "C0413"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 21,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-position",
            "message": "Import \"from agentlib.modules.simulation.simulator import Simulator\" should be placed at the top of the module",
            "message-id": "C0413"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "TestSimulator.get_agent",
            "line": 60,
            "column": 4,
            "path": "tests/test_simulator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "TestSimulator.test_simulation",
            "line": 94,
            "column": 4,
            "path": "tests/test_simulator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "TestSimulator.test_inputs_and_pars",
            "line": 101,
            "column": 4,
            "path": "tests/test_simulator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "tests.test_simulator",
            "obj": "TestSimulator.test_inputs_and_pars",
            "line": 103,
            "column": 8,
            "path": "tests/test_simulator.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _callback_update_model_input of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_simulator",
            "obj": "TestSimulator.test_inputs_and_pars",
            "line": 106,
            "column": 8,
            "path": "tests/test_simulator.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _callback_update_model_parameter of a client class",
            "message-id": "W0212"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "TestSimulator.test_save_results",
            "line": 114,
            "column": 4,
            "path": "tests/test_simulator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "TestSimulator.test_wrong_causality",
            "line": 141,
            "column": 4,
            "path": "tests/test_simulator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "TestSimulator.test_no_files",
            "line": 148,
            "column": 4,
            "path": "tests/test_simulator.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "tests.test_simulator",
            "obj": "TestSimulator.test_model_injection",
            "line": 174,
            "column": 13,
            "path": "tests/test_simulator.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import os\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import shutil\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import unittest\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import uuid\" should be placed before \"import pandas as pd\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"import numpy as np\" should be placed before \"from agentlib import Agent, Environment, AgentVariable\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"import pandas as pd\" should be placed before \"from agentlib import Agent, Environment, AgentVariable\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from pydantic import ValidationError\" should be placed before \"from agentlib import Agent, Environment, AgentVariable\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package unittest are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package pandas are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/test_simulator.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package agentlib are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "tests.test_plugins",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_plugins.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "tests.test_plugins",
            "obj": "TestPlugin.test_model_plugin",
            "line": 11,
            "column": 4,
            "path": "tests/test_plugins.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_plugins",
            "obj": "TestPlugin.test_module_plugin",
            "line": 13,
            "column": 4,
            "path": "tests/test_plugins.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_plugins",
            "obj": "TestPlugin.test_module_not_found_error",
            "line": 15,
            "column": 4,
            "path": "tests/test_plugins.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "fatal",
            "module": "tests.test_module",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_module.py",
            "symbol": "astroid-error",
            "message": "tests/test_module.py: Fatal error while checking 'tests/test_module.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-26.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "tests.test_data_broker",
            "obj": "",
            "line": 128,
            "column": 0,
            "path": "tests/test_data_broker.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "error",
            "module": "tests.test_data_broker",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_data_broker.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.perform_callbacks",
            "line": 33,
            "column": 4,
            "path": "tests/test_data_broker.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.perform_callbacks",
            "line": 34,
            "column": 23,
            "path": "tests/test_data_broker.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _variable_queue of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.perform_callbacks",
            "line": 35,
            "column": 12,
            "path": "tests/test_data_broker.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _execute_callbacks of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.test_callback",
            "line": 42,
            "column": 29,
            "path": "tests/test_data_broker.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _unmapped_callbacks of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.test_callback",
            "line": 55,
            "column": 29,
            "path": "tests/test_data_broker.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _unmapped_callbacks of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.test_callback",
            "line": 61,
            "column": 29,
            "path": "tests/test_data_broker.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _mapped_callbacks of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.test_callback",
            "line": 75,
            "column": 19,
            "path": "tests/test_data_broker.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _mapped_callbacks of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.test_callback",
            "line": 75,
            "column": 8,
            "path": "tests/test_data_broker.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'key'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.dummy_callback",
            "line": 78,
            "column": 4,
            "path": "tests/test_data_broker.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.test_trigger_recursion_error",
            "line": 81,
            "column": 4,
            "path": "tests/test_data_broker.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.run_recursion_error_test",
            "line": 84,
            "column": 4,
            "path": "tests/test_data_broker.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.recursion_callback_1",
            "line": 97,
            "column": 4,
            "path": "tests/test_data_broker.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.recursion_callback_1",
            "line": 97,
            "column": 35,
            "path": "tests/test_data_broker.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'variable'",
            "message-id": "W0613"
        },
        {
            "type": "convention",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.recursion_callback_2",
            "line": 100,
            "column": 4,
            "path": "tests/test_data_broker.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.recursion_callback_2",
            "line": 100,
            "column": 35,
            "path": "tests/test_data_broker.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'variable'",
            "message-id": "W0613"
        },
        {
            "type": "convention",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.test_modules_cannot_overwrite_each_others_callbacks.Module",
            "line": 114,
            "column": 8,
            "path": "tests/test_data_broker.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.test_modules_cannot_overwrite_each_others_callbacks",
            "line": 125,
            "column": 47,
            "path": "tests/test_data_broker.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _callback_config_vars of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.test_modules_cannot_overwrite_each_others_callbacks",
            "line": 130,
            "column": 47,
            "path": "tests/test_data_broker.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _callback_config_vars of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.test_modules_cannot_overwrite_each_others_callbacks",
            "line": 132,
            "column": 29,
            "path": "tests/test_data_broker.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _unmapped_callbacks of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.test_modules_cannot_overwrite_each_others_callbacks",
            "line": 135,
            "column": 47,
            "path": "tests/test_data_broker.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _callback_config_vars of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.test_modules_cannot_overwrite_each_others_callbacks",
            "line": 137,
            "column": 29,
            "path": "tests/test_data_broker.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _unmapped_callbacks of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.run_recursion_error_test",
            "line": 85,
            "column": 8,
            "path": "tests/test_data_broker.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'never_reached' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestLocalDataBroker.recursion_callback_2",
            "line": 102,
            "column": 8,
            "path": "tests/test_data_broker.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute 'never_reached' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "convention",
            "module": "tests.test_data_broker",
            "obj": "TestRTDataBroker",
            "line": 162,
            "column": 0,
            "path": "tests/test_data_broker.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "tests.test_data_broker",
            "obj": "TestRTDataBroker.setUp",
            "line": 169,
            "column": 13,
            "path": "tests/test_data_broker.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _start_executing_callbacks of a client class",
            "message-id": "W0212"
        },
        {
            "type": "convention",
            "module": "tests.test_data_broker",
            "obj": "TestDirectCallbackDataBroker",
            "line": 181,
            "column": 0,
            "path": "tests/test_data_broker.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "tests.test_data_broker",
            "obj": "TestDirectCallbackDataBroker.test_assert_recursion_error",
            "line": 202,
            "column": 4,
            "path": "tests/test_data_broker.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_data_broker",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "tests/test_data_broker.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package unittest are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator_dashboard",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_simulator_dashboard.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "tests.test_simulator_dashboard",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "tests/test_simulator_dashboard.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "tests.test_simulator_dashboard",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "tests/test_simulator_dashboard.py",
            "symbol": "import-error",
            "message": "Unable to import 'dash'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator_dashboard",
            "obj": "TestSimulatorDashboard",
            "line": 15,
            "column": 0,
            "path": "tests/test_simulator_dashboard.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator_dashboard",
            "obj": "TestSimulatorDashboard.test_load_new_data",
            "line": 17,
            "column": 4,
            "path": "tests/test_simulator_dashboard.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator_dashboard",
            "obj": "TestSimulatorDashboard.test_update_data",
            "line": 46,
            "column": 4,
            "path": "tests/test_simulator_dashboard.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator_dashboard",
            "obj": "TestSimulatorDashboard.test_format_time_axis",
            "line": 74,
            "column": 4,
            "path": "tests/test_simulator_dashboard.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_simulator_dashboard",
            "obj": "TestSimulatorDashboard.test_create_plot",
            "line": 79,
            "column": 4,
            "path": "tests/test_simulator_dashboard.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_mas",
            "obj": "TestMAS.test_local_mas",
            "line": 15,
            "column": 4,
            "path": "tests/test_mas.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_mas",
            "obj": "TestMAS.test_multiprocessing_mas",
            "line": 17,
            "column": 4,
            "path": "tests/test_mas.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_mas",
            "obj": "TestMAS.test_clonemap_mas",
            "line": 19,
            "column": 4,
            "path": "tests/test_mas.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "error",
            "module": "tests.test_examples",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "tests.test_examples",
            "obj": "TestExamples._run_example",
            "line": 42,
            "column": 12,
            "path": "tests/test_examples.py",
            "symbol": "broad-exception-raised",
            "message": "Raising too general exception: Exception",
            "message-id": "W0719"
        },
        {
            "type": "convention",
            "module": "tests.test_examples",
            "obj": "TestExamples.test_room_mas",
            "line": 58,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (sys)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "tests.test_examples",
            "obj": "TestExamples.test_room_mas_direct_callback",
            "line": 73,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (sys)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "tests.test_databroker_limits",
            "obj": "DataBrokerExplosionTest",
            "line": 12,
            "column": 0,
            "path": "tests/test_databroker_limits.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "tests.test_databroker_limits",
            "obj": "Sender",
            "line": 31,
            "column": 0,
            "path": "tests/test_databroker_limits.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "tests.test_databroker_limits",
            "obj": "SlowReceiver",
            "line": 45,
            "column": 0,
            "path": "tests/test_databroker_limits.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "tests.test_databroker_limits",
            "obj": "FaultyReceiver",
            "line": 61,
            "column": 0,
            "path": "tests/test_databroker_limits.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "tests.test_databroker_limits",
            "obj": "FaultyReceiver._do_some_slow_stuff",
            "line": 71,
            "column": 8,
            "path": "tests/test_databroker_limits.py",
            "symbol": "broad-exception-raised",
            "message": "Raising too general exception: Exception",
            "message-id": "W0719"
        },
        {
            "type": "convention",
            "module": "tests.test_databroker_limits",
            "obj": "exploding_modules",
            "line": 74,
            "column": 0,
            "path": "tests/test_databroker_limits.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_databroker_limits",
            "obj": "slow_module",
            "line": 95,
            "column": 0,
            "path": "tests/test_databroker_limits.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_databroker_limits",
            "obj": "faulty_module",
            "line": 110,
            "column": 0,
            "path": "tests/test_databroker_limits.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_databroker_limits",
            "obj": "TestDataBrokerLimits",
            "line": 124,
            "column": 0,
            "path": "tests/test_databroker_limits.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "tests.test_databroker_limits",
            "obj": "TestDataBrokerLimits.test_slow_module",
            "line": 125,
            "column": 4,
            "path": "tests/test_databroker_limits.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_databroker_limits",
            "obj": "TestDataBrokerLimits.test_exploding_module",
            "line": 130,
            "column": 4,
            "path": "tests/test_databroker_limits.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_databroker_limits",
            "obj": "TestDataBrokerLimits.test_faulty_module",
            "line": 135,
            "column": 4,
            "path": "tests/test_databroker_limits.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "error",
            "module": "tests.test_model",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_model.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "tests.test_model",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "tests/test_model.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "tests.test_model",
            "obj": "DummyModel",
            "line": 15,
            "column": 0,
            "path": "tests/test_model.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "fatal",
            "module": "tests.test_model",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_model.py",
            "symbol": "astroid-error",
            "message": "tests/test_model.py: Fatal error while checking 'tests/test_model.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-27.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "tests.test_utils",
            "obj": "TestLoadConfig",
            "line": 58,
            "column": 0,
            "path": "tests/test_utils.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "tests.test_utils",
            "obj": "TestLoadConfig.test_load_config",
            "line": 81,
            "column": 17,
            "path": "tests/test_utils.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "tests.test_utils",
            "obj": "TestLoadConfig.test_load_config",
            "line": 81,
            "column": 45,
            "path": "tests/test_utils.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "tests.test_utils",
            "obj": "TestLoadConfig.test_load_config_error",
            "line": 89,
            "column": 4,
            "path": "tests/test_utils.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "error",
            "module": "tests.test_datamodels",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "tests/test_datamodels.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "error",
            "module": "tests.test_datamodels",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_datamodels.py",
            "symbol": "import-error",
            "message": "Unable to import 'pandas'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "tests.test_datamodels",
            "obj": "TestVariables.test_base_model_variable",
            "line": 23,
            "column": 4,
            "path": "tests/test_datamodels.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "tests.test_datamodels",
            "obj": "TestVariables.test_value_conversion",
            "line": 37,
            "column": 12,
            "path": "tests/test_datamodels.py",
            "symbol": "use-dict-literal",
            "message": "Consider using '{\"name\": 'test', \"value\": 100.0, \"type\": 'float'}' instead of a call to 'dict'.",
            "message-id": "R1735"
        },
        {
            "type": "refactor",
            "module": "tests.test_datamodels",
            "obj": "TestVariables.test_series_sending",
            "line": 51,
            "column": 12,
            "path": "tests/test_datamodels.py",
            "symbol": "use-dict-literal",
            "message": "Consider using '{\"name\": 'test', \"value\": srs, \"type\": 'pd.Series'}' instead of a call to 'dict'.",
            "message-id": "R1735"
        },
        {
            "type": "refactor",
            "module": "tests.test_datamodels",
            "obj": "TestVariables.test_type",
            "line": 63,
            "column": 16,
            "path": "tests/test_datamodels.py",
            "symbol": "use-dict-literal",
            "message": "Consider using '{\"name\": 'test', \"type\": 'not_supported'}' instead of a call to 'dict'.",
            "message-id": "R1735"
        },
        {
            "type": "refactor",
            "module": "tests.test_datamodels",
            "obj": "TestVariables.test_type",
            "line": 66,
            "column": 50,
            "path": "tests/test_datamodels.py",
            "symbol": "use-dict-literal",
            "message": "Consider using '{\"name\": 'test', \"type\": float}' instead of a call to 'dict'.",
            "message-id": "R1735"
        },
        {
            "type": "refactor",
            "module": "tests.test_datamodels",
            "obj": "TestVariables.test_allowed_values",
            "line": 72,
            "column": 16,
            "path": "tests/test_datamodels.py",
            "symbol": "use-dict-literal",
            "message": "Consider using '{\"name\": 'test', \"type\": 'float', \"ub\": 10, \"lb\": 0, \"clip\": True}' instead of a call to 'dict'.",
            "message-id": "R1735"
        },
        {
            "type": "refactor",
            "module": "tests.test_datamodels",
            "obj": "TestVariables.test_allowed_values",
            "line": 82,
            "column": 12,
            "path": "tests/test_datamodels.py",
            "symbol": "use-dict-literal",
            "message": "Consider using '{\"name\": 'test', \"type\": 'float', \"value\": 20.0, \"allowed_values\": ['0', '10', 20, 30.0], ... }' instead of a call to 'dict'.",
            "message-id": "R1735"
        },
        {
            "type": "convention",
            "module": "tests.test_datamodels",
            "obj": "TestVariables.test_allowed_values",
            "line": 89,
            "column": 12,
            "path": "tests/test_datamodels.py",
            "symbol": "invalid-name",
            "message": "Variable name \"v\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "tests.test_datamodels",
            "obj": "TestVariables.test_pd_series",
            "line": 101,
            "column": 16,
            "path": "tests/test_datamodels.py",
            "symbol": "use-dict-literal",
            "message": "Consider using '{\"name\": 'test', \"type\": 'pd.Series', \"value\": value, \"ub\": 10, \"lb\": 5, ... }' instead of a call to 'dict'.",
            "message-id": "R1735"
        },
        {
            "type": "refactor",
            "module": "tests.test_datamodels",
            "obj": "TestVariables.test_bounds",
            "line": 183,
            "column": 50,
            "path": "tests/test_datamodels.py",
            "symbol": "use-dict-literal",
            "message": "Consider using '{\"name\": 'test', \"ub\": 100, \"lb\": 200}' instead of a call to 'dict'.",
            "message-id": "R1735"
        },
        {
            "type": "refactor",
            "module": "tests.test_datamodels",
            "obj": "TestVariables.test_bounds",
            "line": 187,
            "column": 12,
            "path": "tests/test_datamodels.py",
            "symbol": "use-dict-literal",
            "message": "Consider using '{\"name\": 'test', \"clip\": True, \"ub\": 100, \"lb\": 0, \"value\": 10000}' instead of a call to 'dict'.",
            "message-id": "R1735"
        },
        {
            "type": "refactor",
            "module": "tests.test_datamodels",
            "obj": "TestVariables.test_bounds",
            "line": 191,
            "column": 12,
            "path": "tests/test_datamodels.py",
            "symbol": "use-dict-literal",
            "message": "Consider using '{\"name\": 'test', \"clip\": True, \"ub\": 100, \"lb\": 0, \"value\": -10000, ... }' instead of a call to 'dict'.",
            "message-id": "R1735"
        },
        {
            "type": "convention",
            "module": "tests.test_datamodels",
            "obj": "TestVariables.test_source",
            "line": 277,
            "column": 4,
            "path": "tests/test_datamodels.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_datamodels",
            "obj": "TestVariables.test_source",
            "line": 279,
            "column": 30,
            "path": "tests/test_datamodels.py",
            "symbol": "unnecessary-dunder-call",
            "message": "Unnecessarily calls dunder method __str__. Use str built-in function.",
            "message-id": "C2801"
        },
        {
            "type": "error",
            "module": "tests.test_agent",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_agent.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "tests.test_agent",
            "obj": "UpdateModuleConfigTest",
            "line": 29,
            "column": 0,
            "path": "tests/test_agent.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "tests.test_agent",
            "obj": "UpdateModuleTest",
            "line": 33,
            "column": 0,
            "path": "tests/test_agent.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "tests.test_agent",
            "obj": "HealthCheckTest",
            "line": 43,
            "column": 0,
            "path": "tests/test_agent.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "warning",
            "module": "tests.test_agent",
            "obj": "HealthCheckTest._cb",
            "line": 56,
            "column": 12,
            "path": "tests/test_agent.py",
            "symbol": "broad-exception-raised",
            "message": "Raising too general exception: Exception",
            "message-id": "W0719"
        },
        {
            "type": "refactor",
            "module": "tests.test_agent",
            "obj": "TestAgent",
            "line": 59,
            "column": 0,
            "path": "tests/test_agent.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (8/7)",
            "message-id": "R0902"
        },
        {
            "type": "warning",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_filepath_module_settings",
            "line": 83,
            "column": 13,
            "path": "tests/test_agent.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_getters",
            "line": 104,
            "column": 4,
            "path": "tests/test_agent.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_getters",
            "line": 105,
            "column": 8,
            "path": "tests/test_agent.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ag\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_set_config",
            "line": 116,
            "column": 8,
            "path": "tests/test_agent.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ag\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_config_setter",
            "line": 134,
            "column": 8,
            "path": "tests/test_agent.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ag\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_config_setter",
            "line": 137,
            "column": 13,
            "path": "tests/test_agent.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_databroker_choice_",
            "line": 149,
            "column": 8,
            "path": "tests/test_agent.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ag\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_databroker_choice_",
            "line": 152,
            "column": 8,
            "path": "tests/test_agent.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ag\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_databroker_choice_",
            "line": 160,
            "column": 8,
            "path": "tests/test_agent.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ag\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_register_modules",
            "line": 173,
            "column": 8,
            "path": "tests/test_agent.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ag\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_health_check",
            "line": 190,
            "column": 8,
            "path": "tests/test_agent.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ag\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_health_check",
            "line": 194,
            "column": 8,
            "path": "tests/test_agent.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ag\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_health_check",
            "line": 205,
            "column": 8,
            "path": "tests/test_agent.py",
            "symbol": "invalid-name",
            "message": "Variable name \"ag\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_health_check",
            "line": 200,
            "column": 8,
            "path": "tests/test_agent.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute '_stop_test' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "warning",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_health_check",
            "line": 217,
            "column": 12,
            "path": "tests/test_agent.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute '_stop_test' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "warning",
            "module": "tests.test_agent",
            "obj": "TestAgent.test_health_check",
            "line": 213,
            "column": 12,
            "path": "tests/test_agent.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute '_still_running' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "warning",
            "module": "tests.test_agent",
            "obj": "TestAgent._no_daemon_thread",
            "line": 226,
            "column": 12,
            "path": "tests/test_agent.py",
            "symbol": "attribute-defined-outside-init",
            "message": "Attribute '_still_running' defined outside __init__",
            "message-id": "W0201"
        },
        {
            "type": "error",
            "module": "tests.test_environment",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_environment.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "tests.test_environment",
            "obj": "TestEnvironment.test_config_setter",
            "line": 39,
            "column": 8,
            "path": "tests/test_environment.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _config of a client class",
            "message-id": "W0212"
        },
        {
            "type": "error",
            "module": "tests.test_environment",
            "obj": "TestEnvironment.test_config_setter",
            "line": 40,
            "column": 30,
            "path": "tests/test_environment.py",
            "symbol": "no-member",
            "message": "Instance of 'Environment' has no 'config' member; maybe '_config'?",
            "message-id": "E1101"
        },
        {
            "type": "warning",
            "module": "tests.test_environment",
            "obj": "TestEnvironment.test_config_setter",
            "line": 42,
            "column": 13,
            "path": "tests/test_environment.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "warning",
            "module": "tests.test_environment",
            "obj": "TestEnvironment.test_config_setter",
            "line": 44,
            "column": 8,
            "path": "tests/test_environment.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _config of a client class",
            "message-id": "W0212"
        },
        {
            "type": "error",
            "module": "tests.test_environment",
            "obj": "TestEnvironment.test_config_setter",
            "line": 45,
            "column": 30,
            "path": "tests/test_environment.py",
            "symbol": "no-member",
            "message": "Instance of 'Environment' has no 'config' member; maybe '_config'?",
            "message-id": "E1101"
        },
        {
            "type": "error",
            "module": "tests.test_environment",
            "obj": "TestEnvironment.test_rt",
            "line": 52,
            "column": 8,
            "path": "tests/test_environment.py",
            "symbol": "no-member",
            "message": "Instance of 'Environment' has no 'run' member",
            "message-id": "E1101"
        },
        {
            "type": "error",
            "module": "tests.test_environment",
            "obj": "TestEnvironment.test_rt",
            "line": 53,
            "column": 32,
            "path": "tests/test_environment.py",
            "symbol": "no-member",
            "message": "Instance of 'Environment' has no 'time' member",
            "message-id": "E1101"
        },
        {
            "type": "error",
            "module": "tests.test_environment",
            "obj": "TestEnvironment.test_no_config",
            "line": 58,
            "column": 30,
            "path": "tests/test_environment.py",
            "symbol": "no-member",
            "message": "Instance of 'Environment' has no 'config' member; maybe '_config'?",
            "message-id": "E1101"
        },
        {
            "type": "refactor",
            "module": "agentlib.models.scipy_model",
            "obj": "",
            "line": 35,
            "column": 0,
            "path": "agentlib/models/scipy_model.py",
            "symbol": "useless-option-value",
            "message": "Useless option value for 'disable', 'no-self-use' was moved to an optional extension, see https://pylint.readthedocs.io/en/latest/whatsnew/2/2.14/summary.html#removed-checkers.",
            "message-id": "R0022"
        },
        {
            "type": "fatal",
            "module": "agentlib.models.scipy_model",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/models/scipy_model.py",
            "symbol": "astroid-error",
            "message": "agentlib/models/scipy_model.py: Fatal error while checking 'agentlib/models/scipy_model.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-27.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib.models.fmu_model",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/models/fmu_model.py",
            "symbol": "astroid-error",
            "message": "agentlib/models/fmu_model.py: Fatal error while checking 'agentlib/models/fmu_model.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-27.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib.models.fmu_model",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib/models/fmu_model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package logging are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "error",
            "module": "agentlib.utils.plugin_import",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib/utils/plugin_import.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "agentlib.utils.plugin_import",
            "obj": "SaveUpdateDict.update",
            "line": 31,
            "column": 0,
            "path": "agentlib/utils/plugin_import.py",
            "symbol": "unused-argument",
            "message": "Unused argument 'kwargs'",
            "message-id": "W0613"
        },
        {
            "type": "warning",
            "module": "agentlib.utils.plugin_import",
            "obj": "load_plugin",
            "line": 72,
            "column": 8,
            "path": "agentlib/utils/plugin_import.py",
            "symbol": "raise-missing-from",
            "message": "Consider explicitly re-raising using 'except AttributeError as exc' and 'raise ImportError(f\"Plugin '{name}' has no dictionary called '{plugin_types_name}' to import plugin types.\") from exc'",
            "message-id": "W0707"
        },
        {
            "type": "convention",
            "module": "agentlib.utils.load_config",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/utils/load_config.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib.utils.load_config",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/utils/load_config.py",
            "symbol": "astroid-error",
            "message": "agentlib/utils/load_config.py: Fatal error while checking 'agentlib/utils/load_config.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-28.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib.utils.local_broadcast_broker",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/utils/local_broadcast_broker.py",
            "symbol": "astroid-error",
            "message": "agentlib/utils/local_broadcast_broker.py: Fatal error while checking 'agentlib/utils/local_broadcast_broker.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-28.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib.utils.validators",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/utils/validators.py",
            "symbol": "astroid-error",
            "message": "agentlib/utils/validators.py: Fatal error while checking 'agentlib/utils/validators.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-28.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib.utils.local_broker",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/utils/local_broker.py",
            "symbol": "astroid-error",
            "message": "agentlib/utils/local_broker.py: Fatal error while checking 'agentlib/utils/local_broker.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-28.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib.utils.fuzzy_matching",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/utils/fuzzy_matching.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib.utils.fuzzy_matching",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/utils/fuzzy_matching.py",
            "symbol": "astroid-error",
            "message": "agentlib/utils/fuzzy_matching.py: Fatal error while checking 'agentlib/utils/fuzzy_matching.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-28.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib.utils.multi_processing_broker",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/utils/multi_processing_broker.py",
            "symbol": "astroid-error",
            "message": "agentlib/utils/multi_processing_broker.py: Fatal error while checking 'agentlib/utils/multi_processing_broker.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-28.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib.utils.__init__",
            "obj": "",
            "line": 105,
            "column": 0,
            "path": "agentlib/utils/__init__.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "error",
            "module": "agentlib.utils",
            "obj": "",
            "line": 14,
            "column": 0,
            "path": "agentlib/utils/__init__.py",
            "symbol": "import-error",
            "message": "Unable to import 'numpy'",
            "message-id": "E0401"
        },
        {
            "type": "warning",
            "module": "agentlib.utils",
            "obj": "custom_injection",
            "line": 87,
            "column": 8,
            "path": "agentlib/utils/__init__.py",
            "symbol": "raise-missing-from",
            "message": "Consider explicitly re-raising using 'except KeyError as exc' and 'raise ImportError(f\"Given module '{custom_module}' does not contain the specified class {class_name}\") from exc'",
            "message-id": "W0707"
        },
        {
            "type": "convention",
            "module": "agentlib.utils.multi_processing_broker",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib/utils/multi_processing_broker.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package json are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.utils",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "agentlib/utils/__init__.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package pathlib are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.utils.multi_agent_system",
            "obj": "",
            "line": 219,
            "column": 0,
            "path": "agentlib/utils/multi_agent_system.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "fatal",
            "module": "agentlib.utils.multi_agent_system",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/utils/multi_agent_system.py",
            "symbol": "astroid-error",
            "message": "agentlib/utils/multi_agent_system.py: Fatal error while checking 'agentlib/utils/multi_agent_system.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-29.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib.utils.plotting.simulator_dashboard",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/utils/plotting/simulator_dashboard.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib.utils.plotting.simulator_dashboard",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/utils/plotting/simulator_dashboard.py",
            "symbol": "astroid-error",
            "message": "agentlib/utils/plotting/simulator_dashboard.py: Fatal error while checking 'agentlib/utils/plotting/simulator_dashboard.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-29.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib.utils.plotting.simulator_dashboard",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib/utils/plotting/simulator_dashboard.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package pathlib are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "fatal",
            "module": "agentlib.core.data_broker",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/core/data_broker.py",
            "symbol": "astroid-error",
            "message": "agentlib/core/data_broker.py: Fatal error while checking 'agentlib/core/data_broker.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-30.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib.core.agent",
            "obj": "",
            "line": 47,
            "column": 0,
            "path": "agentlib/core/agent.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "fatal",
            "module": "agentlib.core.agent",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/core/agent.py",
            "symbol": "astroid-error",
            "message": "agentlib/core/agent.py: Fatal error while checking 'agentlib/core/agent.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-30.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib.core.module",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/core/module.py",
            "symbol": "astroid-error",
            "message": "agentlib/core/module.py: Fatal error while checking 'agentlib/core/module.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-30.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib.core.logging_",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/core/logging_.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib.core.logging_",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/core/logging_.py",
            "symbol": "astroid-error",
            "message": "agentlib/core/logging_.py: Fatal error while checking 'agentlib/core/logging_.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-30.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib.core.environment",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/core/environment.py",
            "symbol": "astroid-error",
            "message": "agentlib/core/environment.py: Fatal error while checking 'agentlib/core/environment.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-30.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib.core.datamodels",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/core/datamodels.py",
            "symbol": "astroid-error",
            "message": "agentlib/core/datamodels.py: Fatal error while checking 'agentlib/core/datamodels.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-30.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib.core.model",
            "obj": "",
            "line": 87,
            "column": 0,
            "path": "agentlib/core/model.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib.core.model",
            "obj": "",
            "line": 254,
            "column": 0,
            "path": "agentlib/core/model.py",
            "symbol": "line-too-long",
            "message": "Line too long (118/100)",
            "message-id": "C0301"
        },
        {
            "type": "fatal",
            "module": "agentlib.core.model",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/core/model.py",
            "symbol": "astroid-error",
            "message": "agentlib/core/model.py: Fatal error while checking 'agentlib/core/model.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-31.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib.core.agent",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib/core/agent.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package threading are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.module",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib/core/module.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package abc are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.module",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib/core/module.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package json are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.module",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib/core/module.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package logging are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.module",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "agentlib/core/module.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package copy are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.logging_",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/core/logging_.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package logging are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.environment",
            "obj": "",
            "line": 28,
            "column": 0,
            "path": "agentlib/core/environment.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package json are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.environment",
            "obj": "",
            "line": 31,
            "column": 0,
            "path": "agentlib/core/environment.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package pathlib are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.datamodels",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib/core/datamodels.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package abc are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.datamodels",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "agentlib/core/datamodels.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package json are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.datamodels",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "agentlib/core/datamodels.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package logging are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.datamodels",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "agentlib/core/datamodels.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package copy are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.model",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "agentlib/core/model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package abc are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.model",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib/core/model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package json are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.model",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib/core/model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package logging are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.model",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "agentlib/core/model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package copy are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "convention",
            "module": "agentlib.core.model",
            "obj": "",
            "line": 8,
            "column": 0,
            "path": "agentlib/core/model.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package itertools are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "fatal",
            "module": "agentlib.modules.__init__",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/__init__.py",
            "symbol": "astroid-error",
            "message": "agentlib/modules/__init__.py: Fatal error while checking 'agentlib/modules/__init__.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-31.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "fatal",
            "module": "agentlib.modules.utils.try_sensor",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/utils/try_sensor.py",
            "symbol": "astroid-error",
            "message": "agentlib/modules/utils/try_sensor.py: Fatal error while checking 'agentlib/modules/utils/try_sensor.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-31.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.utils.agent_logger",
            "obj": "",
            "line": 57,
            "column": 0,
            "path": "agentlib/modules/utils/agent_logger.py",
            "symbol": "useless-option-value",
            "message": "Useless option value for 'disable', 'no-self-use' was moved to an optional extension, see https://pylint.readthedocs.io/en/latest/whatsnew/2/2.14/summary.html#removed-checkers.",
            "message-id": "R0022"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.utils.agent_logger",
            "obj": "",
            "line": 45,
            "column": 0,
            "path": "agentlib/modules/utils/agent_logger.py",
            "symbol": "line-too-long",
            "message": "Line too long (106/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.utils.agent_logger",
            "obj": "",
            "line": 50,
            "column": 0,
            "path": "agentlib/modules/utils/agent_logger.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "fatal",
            "module": "agentlib.modules.utils.agent_logger",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/utils/agent_logger.py",
            "symbol": "astroid-error",
            "message": "agentlib/modules/utils/agent_logger.py: Fatal error while checking 'agentlib/modules/utils/agent_logger.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-31.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.communicator.local_broadcast",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/communicator/local_broadcast.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.communicator.local",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/communicator/local.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.communicator.local",
            "obj": "LocalSubscriptionCommunicatorConfig",
            "line": 11,
            "column": 0,
            "path": "agentlib/modules/communicator/local.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.communicator.local",
            "obj": "LocalClient.subscriptions",
            "line": 33,
            "column": 4,
            "path": "agentlib/modules/communicator/local.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "fatal",
            "module": "agentlib.modules.communicator.clonemap",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/communicator/clonemap.py",
            "symbol": "astroid-error",
            "message": "agentlib/modules/communicator/clonemap.py: Fatal error while checking 'agentlib/modules/communicator/clonemap.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-32.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.communicator.local_multiprocessing",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/communicator/local_multiprocessing.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib.modules.communicator.local_multiprocessing",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "agentlib/modules/communicator/local_multiprocessing.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.communicator.local_multiprocessing",
            "obj": "MultiProcessingBroadcastClientConfig",
            "line": 18,
            "column": 0,
            "path": "agentlib/modules/communicator/local_multiprocessing.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "error",
            "module": "agentlib.modules.communicator.local_multiprocessing",
            "obj": "MultiProcessingBroadcastClient.__init__",
            "line": 50,
            "column": 16,
            "path": "agentlib/modules/communicator/local_multiprocessing.py",
            "symbol": "no-member",
            "message": "Instance of 'BrokerManager' has no 'connect' member",
            "message-id": "E1101"
        },
        {
            "type": "error",
            "module": "agentlib.modules.communicator.local_multiprocessing",
            "obj": "MultiProcessingBroadcastClient.__init__",
            "line": 57,
            "column": 23,
            "path": "agentlib/modules/communicator/local_multiprocessing.py",
            "symbol": "no-member",
            "message": "Instance of 'BrokerManager' has no 'get_queue' member",
            "message-id": "E1101"
        },
        {
            "type": "warning",
            "module": "agentlib.modules.communicator.local_multiprocessing",
            "obj": "MultiProcessingBroadcastClient._message_handler",
            "line": 91,
            "column": 12,
            "path": "agentlib/modules/communicator/local_multiprocessing.py",
            "symbol": "logging-fstring-interpolation",
            "message": "Use lazy % formatting in logging functions",
            "message-id": "W1203"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.communicator.local_multiprocessing",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "agentlib/modules/communicator/local_multiprocessing.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"from ipaddress import IPv4Address\" should be placed before \"from pydantic import Field\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.communicator.mqtt",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/communicator/mqtt.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib.modules.communicator.mqtt",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/communicator/mqtt.py",
            "symbol": "astroid-error",
            "message": "agentlib/modules/communicator/mqtt.py: Fatal error while checking 'agentlib/modules/communicator/mqtt.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-32.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.simulation.csv_data_source",
            "obj": "",
            "line": 182,
            "column": 0,
            "path": "agentlib/modules/simulation/csv_data_source.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.simulation.csv_data_source",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/simulation/csv_data_source.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib.modules.simulation.csv_data_source",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/simulation/csv_data_source.py",
            "symbol": "astroid-error",
            "message": "agentlib/modules/simulation/csv_data_source.py: Fatal error while checking 'agentlib/modules/simulation/csv_data_source.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-32.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.simulation",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/simulation/__init__.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.controller.bangbang",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/bangbang.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "error",
            "module": "agentlib.modules.controller.bangbang",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/bangbang.py",
            "symbol": "import-error",
            "message": "Unable to import 'pydantic'",
            "message-id": "E0401"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.bangbang",
            "obj": "BangBang.do_step",
            "line": 48,
            "column": 4,
            "path": "agentlib/modules/controller/bangbang.py",
            "symbol": "inconsistent-return-statements",
            "message": "Either all return statements in a function should return an expression, or none of them should.",
            "message-id": "R1710"
        },
        {
            "type": "fatal",
            "module": "agentlib.modules.controller.controller",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/controller.py",
            "symbol": "astroid-error",
            "message": "agentlib/modules/controller/controller.py: Fatal error while checking 'agentlib/modules/controller/controller.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-32.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.controller",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/__init__.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "fatal",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "astroid-error",
            "message": "agentlib/modules/controller/pid.py: Fatal error while checking 'agentlib/modules/controller/pid.py'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in '/home/runner/.cache/pylint/pylint-crash-2025-10-31-13-05-32.txt'.",
            "message-id": "F0002"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.controller.bangbang_with_simulator:[53:98]\n==examples.controller.pid_with_simulator:[67:112]\n}\n\nprocess_agent_config = {\n    \"id\": \"Process\",\n    \"modules\": [\n        {\n            \"module_id\": \"sim\",\n            \"type\": \"simulator\",\n            \"model\": {\"type\": {\"file\": __file__, \"class_name\": \"HeatedRoom\"}},\n            \"t_sample\": 10,\n            \"inputs\": [\n                {\"name\": \"heating_power_in_watt\", \"value\": 0, \"alias\": \"heating_power\"}\n            ],\n            \"states\": [\n                {\n                    \"name\": \"temperature_in_celsius\",\n                    \"value\": 21,\n                    \"shared\": True,\n                    \"alias\": \"room_temp\",\n                }\n            ],\n        },\n        {\"module_id\": \"myLogger\", \"type\": \"AgentLogger\"},\n        {\"module_id\": \"myComm\", \"type\": \"local\", \"subscriptions\": [\"PID\"]},\n    ],\n}\n\n\ndef run_example(with_plots=True, log_level=logging.INFO):\n    # Set the log-level\n    logging.basicConfig(level=log_level)\n\n    env_config = {\"rt\": False, \"factor\": 0.01, \"clock\": True, \"t_sample\": 60}\n    env = ag.Environment(config=env_config)\n    pid_agent = ag.Agent(config=pid_agent_config, env=env)\n    process_agent = ag.Agent(config=process_agent_config, env=env)\n    env.run(until=1000)\n\n    results = process_agent.get_results()\n    res = results[\"myLogger\"]\n    if with_plots:\n        import matplotlib.pyplot as plt\n\n        fig, ax = plt.subplots(2, 1)\n        res[\"room_temp\"].plot(ax=ax[0], label=\"$T_{room}$\")",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.getting-started.part_3_using_models_concise:[9:57]\n==examples.getting-started.part_3_using_models_with_comments:[27:97]\nimport logging\nfrom typing import List\n\nimport agentlib as ag\n\n\n# define the inputs, outputs, states and parameters of your model\nclass HeatedRoomConfig(ag.ModelConfig):\n    inputs: List[ag.ModelInput] = [\n        ag.ModelInput(name=\"heating_power_in_watt\", value=100)\n    ]\n    states: List[ag.ModelState] = [\n        ag.ModelState(name=\"temperature_in_celsius\", value=20)\n    ]\n    parameters: List[ag.ModelParameter] = [\n        ag.ModelParameter(name=\"heat_loss_in_watt\", value=150),\n        ag.ModelParameter(name=\"thermal_capacity_zone\", value=100_000),\n    ]\n    outputs: List[ag.ModelOutput] = []\n\n\nclass HeatedRoom(ag.Model):\n    config: HeatedRoomConfig  # match the config to the model\n\n    def initialize(self, **kwargs):\n        pass\n\n    # define a discrete simulation step\n    def do_step(self, *, t_start, t_sample):\n        t = self.get(\"temperature_in_celsius\").value  # get/set also works in models\n        power = self.get(\"heating_power_in_watt\").value\n        loss = self.get(\"heat_loss_in_watt\").value\n        capacity = self.get(\"thermal_capacity_zone\").value\n        t = t + ((power - loss) / capacity) * t_sample\n        self.set(\"temperature_in_celsius\", t)\n\n\nagent_config = {\n    \"id\": \"my_agent_id\",\n    \"modules\": [\n        {\n            \"module_id\": \"sim\",\n            \"type\": \"simulator\",  # specify the simulator module\n            \"model\": {\n                # under type, we include a custom injection to our defined model\n                # other options for type are:\n                # \"fmu\" (see examples/multi-agent-systems/room_mas/configs/Room1.json)\n                # or \"statespace\"\n                \"type\": {\"file\": __file__, \"class_name\": \"HeatedRoom\"},\n            },\n            # specify the interval, in which outputs are written, and inputs are updated\n            \"t_sample\": 10,\n            # the simulator can save its own results if desired, there is no need for an AgentLogger\n            \"save_results\": True,\n            # results are stored in RAM if not specified\n            \"result_filename\": \"results_part3.csv\",\n            # define, which variable groups we want to store in the results. Note that\n            # here, we wrote locals, which maps to the states. This is a special case,\n            # where we used states instead of locals in some places, to avoid shadowing\n            # the Python builtin locals. By default, we store inputs and outputs. The\n            # locals (i.e. states) are not stored by default, as they are often of\n            # extremely high number in FMU models. Therefore, we have to activate them\n            # manually here.\n            \"result_causalities\": [\"local\"],\n            # the inputs and states fields of the simulator are lists of AgentVariables\n            # There are also the fields outputs and parameters. We do not have to\n            # specify all the variables that are given in the model config. However,\n            # only variables that we specify here, can be have their values changed\n            # from the default in the model, and only outputs defined here can be\n            # sent to other agents.",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.controller.bangbang_with_simulator:[0:36]\n==examples.controller.pid_with_simulator:[11:47]\nimport logging\nfrom typing import List\n\nimport agentlib as ag\n\n\nclass HeatedRoomConfig(ag.ModelConfig):\n    inputs: List[ag.ModelInput] = [\n        ag.ModelInput(name=\"heating_power_in_watt\", value=100)\n    ]\n    states: List[ag.ModelState] = [\n        ag.ModelState(name=\"temperature_in_celsius\", value=20)\n    ]\n    parameters: List[ag.ModelParameter] = [\n        ag.ModelParameter(name=\"heat_loss_in_watt\", value=150),\n        ag.ModelParameter(name=\"thermal_capacity_zone\", value=100_000),\n    ]\n\n\nclass HeatedRoom(ag.Model):\n    config: HeatedRoomConfig\n\n    def initialize(self, **kwargs):\n        pass\n\n    def do_step(self, *, t_start, t_sample):\n        t = self.get(\"temperature_in_celsius\").value\n        power = self.get(\"heating_power_in_watt\").value\n        loss = self.get(\"heat_loss_in_watt\").value\n        capacity = self.get(\"thermal_capacity_zone\").value\n        t = t + ((power - loss) / capacity) * t_sample\n        self.set(\"temperature_in_celsius\", t)\n\n\npid_agent_config = {\n    \"id\": \"PID\",",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.getting-started.part_2_agentvariables_concise:[10:45]\n==examples.getting-started.part_2_agentvariables_with_comments:[10:72]\nimport logging\n\nimport agentlib as ag\n\n\nclass MyModuleConfig(ag.BaseModuleConfig):\n    increment: float = 0.5\n    my_number: ag.AgentVariable\n\n\nclass MyModule(ag.BaseModule):\n    config: MyModuleConfig\n\n    def process(self):\n        # the .name attribute of an AgentVariable is also accessible. Here, we define\n        # a local variable for convenience\n        name_of_my_number = self.config.my_number.name\n\n        while True:\n            # we can access the AgentVariable by its name with the .get() method,\n            # defined in the BaseModule and available through inheritance.\n            # We accessed the AgentVariable - specifically its name attribute - above\n            # through the config. However that is a static copy. With the get() method,\n            # we obtain the variable with its current value.\n            my_number = self.get(name_of_my_number)\n\n            # we access the variables value, and add our predefined number to it. It\n            # is easy to forget you need to access the value, since the get() method\n            # returns the whole AgentVariable.\n            new_value = my_number.value + self.config.increment\n\n            # Now we log what we did, to confirm it is working.\n            self.logger.info(\n                f\"I will change the value of '{name_of_my_number}' from {my_number.value} to {new_value}.\"\n            )\n\n            # The set method will write the new value of our variable. Using the set\n            # method notifies other modules, that we changed the value of this variable.\n            # If we were to just assign a value to the variable that we retrieved with\n            # get(), it would not be remembered for the next time, and cannot be used\n            # by other modules.\n            self.set(name_of_my_number, new_value)\n            yield self.env.timeout(1)\n\n    def register_callbacks(self):\n        pass\n\n\nagent_config = {\n    \"id\": \"my_agent_id\",\n    \"modules\": [\n        {\n            \"type\": {\"file\": __file__, \"class_name\": \"MyModule\"},\n            # when specifying fields of a module config that represent AgentVariables,\n            # we have to provide more than just a value. The 'name' key is always\n            # required. The 'value' key is not required and will default to None.\n            # However, it often results in TypeErrors within the Module, if the value\n            # is None, and depends on the specific code where the variable is used.\n            \"my_number\": {\"name\": \"greg\", \"value\": 5},\n        },\n        # We define a second module in this agent, which will log the value of\n        # AgentVariables.",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.getting-started.part_3_using_models_with_comments:[27:64]\n==examples.getting-started.part_4_communicators_with_comments:[10:48]\nimport logging\nfrom typing import List\n\nimport agentlib as ag\n\n\n# define the inputs, outputs, states and parameters of your model\nclass HeatedRoomConfig(ag.ModelConfig):\n    inputs: List[ag.ModelInput] = [\n        ag.ModelInput(name=\"heating_power_in_watt\", value=100)\n    ]\n    states: List[ag.ModelState] = [\n        ag.ModelState(name=\"temperature_in_celsius\", value=20)\n    ]\n    parameters: List[ag.ModelParameter] = [\n        ag.ModelParameter(name=\"heat_loss_in_watt\", value=150),\n        ag.ModelParameter(name=\"thermal_capacity_zone\", value=100_000),\n    ]\n    outputs: List[ag.ModelOutput] = []\n\n\nclass HeatedRoom(ag.Model):\n    config: HeatedRoomConfig  # match the config to the model\n\n    def initialize(self, **kwargs):\n        pass\n\n    # define a discrete simulation step\n    def do_step(self, *, t_start, t_sample):\n        t = self.get(\"temperature_in_celsius\").value  # get/set also works in models\n        power = self.get(\"heating_power_in_watt\").value\n        loss = self.get(\"heat_loss_in_watt\").value\n        capacity = self.get(\"thermal_capacity_zone\").value\n        t = t + ((power - loss) / capacity) * t_sample\n        self.set(\"temperature_in_celsius\", t)\n\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.getting-started.part_1_my_first_agent_concise:[25:54]\n==examples.getting-started.part_1_my_first_agent_with_comments:[29:91]\n        while True:\n            self.logger.info(f\"I am {self.config.name} with age {self.config.age}.\")\n            yield self.env.timeout(1)\n\n    def register_callbacks(self):\n        pass\n\n\nagent_config = {\n    \"id\": \"my_agent_id\",\n    \"modules\": [\n        {\n            \"type\": {\"file\": __file__, \"class_name\": \"MyFirstModule\"},\n            \"name\": \"first_agent\",\n        }\n    ],\n}\n\n\ndef main():\n    logging.basicConfig(level=logging.INFO)\n    environment_config = {\"rt\": False, \"factor\": 1, \"clock\": False, \"t_sample\": 60}\n    env = ag.Environment(config=environment_config)\n    agent = ag.Agent(config=agent_config, env=env)\n    env.run(10)\n\n\nif __name__ == \"__main__\":\n    main()",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.getting-started.part_3_using_models_concise:[59:84]\n==examples.getting-started.part_3_using_models_with_comments:[103:139]\n        },\n    ],\n}\n\n\ndef main(with_plots: bool = True):\n    logging.basicConfig(level=logging.INFO)\n    environment_config = {\"rt\": False, \"factor\": 1, \"clock\": False}\n    mas = ag.LocalMASAgency(agent_configs=[agent_config], env=environment_config)\n    mas.run(1800)\n\n    if with_plots:\n        import matplotlib.pyplot as plt\n        import pandas as pd\n\n        results = mas.get_results()[\"my_agent_id\"]\n        logger_results: pd.DataFrame = results[\"sim\"]\n        logger_results[\"temperature_in_celsius\"].plot()\n        plt.ylabel(\"Temperature / \u00b0C\")\n        plt.xlabel(\"Time / sec\")\n        plt.show()\n\n\nif __name__ == \"__main__\":\n    main()",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.getting-started.part_2_agentvariables_concise:[46:74]\n==examples.getting-started.part_2_agentvariables_with_comments:[85:120]\n    ],\n}\n\n\ndef main(with_plots: bool = True):\n    logging.basicConfig(level=logging.INFO)\n\n    environment_config = {\"rt\": False, \"factor\": 1, \"clock\": False}\n    env = ag.Environment(config=environment_config)\n    agent = ag.Agent(config=agent_config, env=env)\n    env.run(10)\n\n    if with_plots:\n        import matplotlib.pyplot as plt\n        import pandas as pd\n\n        results = agent.get_results()\n\n        # key here is the module_id of the agentlogger\n        logger_results: pd.DataFrame = results[\"my_logger\"]\n\n        # key is name of the variable (it's actually the alias, more on this later!)\n        logger_results[\"greg\"].plot()\n        plt.show()\n\n\nif __name__ == \"__main__\":\n    main()",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.controller.pid_with_simulator:[11:30]\n==examples.getting-started.part_3_using_models_with_comments:[27:45]\nimport logging\nfrom typing import List\n\nimport agentlib as ag\n\n\n# define the inputs, outputs, states and parameters of your model\nclass HeatedRoomConfig(ag.ModelConfig):\n    inputs: List[ag.ModelInput] = [\n        ag.ModelInput(name=\"heating_power_in_watt\", value=100)\n    ]\n    states: List[ag.ModelState] = [\n        ag.ModelState(name=\"temperature_in_celsius\", value=20)\n    ]\n    parameters: List[ag.ModelParameter] = [\n        ag.ModelParameter(name=\"heat_loss_in_watt\", value=150),\n        ag.ModelParameter(name=\"thermal_capacity_zone\", value=100_000),\n    ]",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.controller.bangbang_with_simulator:[0:19]\n==examples.getting-started.part_4_communicators_with_comments:[10:28]\nimport logging\nfrom typing import List\n\nimport agentlib as ag\n\n\nclass HeatedRoomConfig(ag.ModelConfig):\n    inputs: List[ag.ModelInput] = [\n        ag.ModelInput(name=\"heating_power_in_watt\", value=100)\n    ]\n    states: List[ag.ModelState] = [\n        ag.ModelState(name=\"temperature_in_celsius\", value=20)\n    ]\n    parameters: List[ag.ModelParameter] = [\n        ag.ModelParameter(name=\"heat_loss_in_watt\", value=150),\n        ag.ModelParameter(name=\"thermal_capacity_zone\", value=100_000),\n    ]\n\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.getting-started.part_3_using_models_with_comments:[118:139]\n==examples.getting-started.part_4_communicators_with_comments:[141:157]\n    mas.run(1800)\n\n    if with_plots:\n        import matplotlib.pyplot as plt\n        import pandas as pd\n\n        results = mas.get_results()[\"my_agent_id\"]\n        logger_results: pd.DataFrame = results[\"sim\"]\n        logger_results[\"temperature_in_celsius\"].plot()\n        plt.ylabel(\"Temperature / \u00b0C\")\n        plt.xlabel(\"Time / sec\")\n        plt.show()\n\n\nif __name__ == \"__main__\":\n    main()",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.getting-started.part_3_using_models_with_comments:[66:98]\n==examples.getting-started.part_4_communicators_with_comments:[50:72]\n    \"modules\": [\n        {\n            \"module_id\": \"sim\",\n            \"type\": \"simulator\",  # specify the simulator module\n            \"model\": {\n                # under type, we include a custom injection to our defined model\n                # other options for type are:\n                # \"fmu\" (see examples/multi-agent-systems/room_mas/configs/Room1.json)\n                # or \"statespace\"\n                \"type\": {\"file\": __file__, \"class_name\": \"HeatedRoom\"},\n            },\n            # specify the interval, in which outputs are written, and inputs are updated\n            \"t_sample\": 10,\n            # the simulator can save its own results if desired, there is no need for an AgentLogger\n            \"save_results\": True,\n            # results are stored in RAM if not specified\n            \"result_filename\": \"results_part3.csv\",\n            # define, which variable groups we want to store in the results. Note that\n            # here, we wrote locals, which maps to the states. This is a special case,\n            # where we used states instead of locals in some places, to avoid shadowing\n            # the Python builtin locals. By default, we store inputs and outputs. The\n            # locals (i.e. states) are not stored by default, as they are often of\n            # extremely high number in FMU models. Therefore, we have to activate them\n            # manually here.\n            \"result_causalities\": [\"local\"],\n            # the inputs and states fields of the simulator are lists of AgentVariables\n            # There are also the fields outputs and parameters. We do not have to\n            # specify all the variables that are given in the model config. However,\n            # only variables that we specify here, can be have their values changed\n            # from the default in the model, and only outputs defined here can be\n            # sent to other agents.\n            \"inputs\": [",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.controller.pid_with_simulator:[45:56]\n==examples.getting-started.part_4_communicators_with_comments:[95:114]\npid_agent_config = {\n    \"id\": \"PID\",\n    \"modules\": [\n        {\n            \"module_id\": \"myPid\",\n            \"type\": \"pid\",\n            \"setpoint\": 21,\n            \"Kp\": 1000,\n            \"Ti\": 10,\n            \"lb\": 0,\n            \"ub\": 500,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.getting-started.part_3_using_models_concise:[46:57]\n==examples.getting-started.part_4_communicators_with_comments:[50:61]\n    \"modules\": [\n        {\n            \"module_id\": \"sim\",\n            \"type\": \"simulator\",\n            \"model\": {\n                \"type\": {\"file\": __file__, \"class_name\": \"HeatedRoom\"},\n            },\n            \"t_sample\": 10,\n            \"save_results\": True,\n            \"result_filename\": \"results_part3.csv\",\n            \"result_causalities\": [\"local\"],",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.multi-agent-systems.pingpong.pingpong_local_broadcast:[22:32]\n==examples.multi-agent-systems.pingpong.pingpong_mqtt:[18:28]\n        {\n            \"module_id\": \"Ping\",\n            \"type\": {\"file\": pingpong_module.__file__, \"class_name\": \"PingPong\"},\n            \"start\": True,\n        },\n    ],\n}\nagent_config2 = {\n    \"id\": \"SecondAgent\",\n    \"modules\": [",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.controller.pid_with_simulator:[30:45]\n==examples.getting-started.part_3_using_models_with_comments:[48:64]\nclass HeatedRoom(ag.Model):\n    config: HeatedRoomConfig\n\n    def initialize(self, **kwargs):\n        pass\n\n    def do_step(self, *, t_start, t_sample):\n        t = self.get(\"temperature_in_celsius\").value\n        power = self.get(\"heating_power_in_watt\").value\n        loss = self.get(\"heat_loss_in_watt\").value\n        capacity = self.get(\"thermal_capacity_zone\").value\n        t = t + ((power - loss) / capacity) * t_sample\n        self.set(\"temperature_in_celsius\", t)\n\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.controller.bangbang_with_simulator:[19:34]\n==examples.getting-started.part_4_communicators_with_comments:[31:48]\nclass HeatedRoom(ag.Model):\n    config: HeatedRoomConfig\n\n    def initialize(self, **kwargs):\n        pass\n\n    def do_step(self, *, t_start, t_sample):\n        t = self.get(\"temperature_in_celsius\").value  # get/set also works in models\n        power = self.get(\"heating_power_in_watt\").value\n        loss = self.get(\"heat_loss_in_watt\").value\n        capacity = self.get(\"thermal_capacity_zone\").value\n        t = t + ((power - loss) / capacity) * t_sample\n        self.set(\"temperature_in_celsius\", t)\n\n\n# here, we have a similar configuration as last time, however, there are differences in\n# the variable declarations",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.multi-agent-systems.pingpong.pingpong_local:[25:37]\n==examples.multi-agent-systems.pingpong.pingpong_mqtt:[34:46]\n        {\n            \"module_id\": \"Pong\",\n            \"type\": {\"file\": pingpong_module.__file__, \"class_name\": \"PingPong\"},\n        },\n    ],\n}\n\n\nif __name__ == \"__main__\":\n    # Add configs to LocalMAS Agency\n    MAS = LocalMASAgency(agent_configs=[agent_config1, agent_config2], env=env_config)\n    MAS.run(until=None)",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.controller.bangbang_with_simulator:[42:50]\n==examples.controller.pid_with_simulator:[56:64]\n            \"input\": {\"name\": \"u\", \"value\": 0, \"alias\": \"room_temp\"},\n            \"output\": {\n                \"name\": \"y\",\n                \"value\": 0,\n                \"alias\": \"heating_power\",\n                \"shared\": True,\n            },\n        },",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.controller.bangbang_with_simulator:[101:110]\n==examples.controller.pid_with_simulator:[113:122]\n        res[\"heating_power\"].plot(ax=ax[1], label=\"$\\dot{Q}_{heat}$\")\n        ax[0].legend()\n        ax[1].legend()\n        plt.show()\n    return {\"PID_1\": results}\n\n\nif __name__ == \"__main__\":\n    run_example(log_level=\"INFO\")",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==tests.test_agent:[243:251]\n==tests.test_environment:[61:69]\n        try:\n            os.remove(self.filepath)\n        except FileNotFoundError:\n            pass\n\n\nif __name__ == \"__main__\":\n    unittest.main()",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==tests.test_communicator:[12:18]\n==tests.test_module:[27:33]\n    \"allowed_values\": [100, 150],\n    \"shared\": True,\n    \"unit\": \"testUnit\",\n    \"description\": \"My Doc\",\n    \"clip\": True,\n    \"rdf_class\": \"MyRDFClass\",",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.controller.bangbang_with_simulator:[55:61]\n==examples.getting-started.part_4_communicators_with_comments:[48:54]\nprocess_agent_config = {\n    \"id\": \"Process\",  # the ID is now Process\n    \"modules\": [\n        {\n            \"module_id\": \"sim\",\n            \"type\": \"simulator\",",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.getting-started.part_1_my_first_agent_concise:[27:37]\n==examples.getting-started.part_2_agentvariables_concise:[32:42]\n            yield self.env.timeout(1)\n\n    def register_callbacks(self):\n        pass\n\n\nagent_config = {\n    \"id\": \"my_agent_id\",\n    \"modules\": [\n        {",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.getting-started.part_1_my_first_agent_with_comments:[32:59]\n==examples.getting-started.part_2_agentvariables_with_comments:[52:62]\n            yield self.env.timeout(1)  # timeout is in seconds\n\n    def register_callbacks(self):\n        # we will learn about callbacks later\n        pass\n\n\n# the config of an agent can be a python dict or a JSON-file\n# the config has two keys: id and modules\nagent_config = {\n    # the id is the public name of the agent. It will become later, when using\n    # communicators. It is also displayed in log messages.\n    \"id\": \"my_agent_id\",\n    # second comes a list of modules, which define the function of the agent. Usually,\n    # an agent has a communicator and a functional module, but in fact, any\n    # combination of modules is possible.\n    # In this example, there is no communication with other agents, so we only have one\n    # module\n    \"modules\": [\n        {\n            # the type key defines the class of a module and is always required\n            # There are two ways to specify the type\n            #   1. Use a module from the core, or a plugin. You only need to write down\n            #   the string-key which maps to it.\n            #   2. Use a custom module. Under type, write down a dict, pointing to the\n            #   exact python class you want to execute.\n            # In our example, we use option two, to load the module defined above.",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.getting-started.part_1_my_first_agent_concise:[11:22]\n==examples.getting-started.part_1_my_first_agent_with_comments:[11:23]\nimport logging\n\nimport agentlib as ag\n\n\n# every\nclass MyFirstModuleConfig(ag.BaseModuleConfig):\n    name: str\n    age: int = 2\n\n\nclass MyFirstModule(ag.BaseModule):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.multi-agent-systems.pingpong.pingpong_mqtt:[5:12]\n==examples.multi-agent-systems.pingpong.pingpong_multiprocessing:[15:23]\nlogging.basicConfig(level=\"DEBUG\")\nlogger = logging.getLogger(__name__)\n\n\nenv_config = {\"rt\": True, \"factor\": 1}\nagent_config1 = {\n    \"id\": \"FirstAgent\",\n    \"modules\": [",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==tests.test_agentlogger:[23:31]\n==tests.test_simulator:[60:68]\n        env_config = {\"rt\": False, \"factor\": 1}\n        agent_config = {\"id\": \"TestAgent\", \"modules\": []}\n        env = Environment(config=env_config)\n        return Agent(env=env, config=agent_config)\n\n    def _get_module_cfg(self, **kwargs):\n        \"\"\"Dynamically build config to avoid duplicate code:\"\"\"\n        return {",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "agentlib.modules.controller.pid",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "agentlib/modules/controller/pid.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==examples.multi-agent-systems.pingpong.pingpong_local:[0:7]\n==examples.multi-agent-systems.pingpong.pingpong_mqtt:[0:8]\nimport logging\nimport pingpong_module\nfrom agentlib.utils.multi_agent_system import LocalMASAgency\n\n\nlogging.basicConfig(level=\"DEBUG\")\nlogger = logging.getLogger(__name__)\n",
            "message-id": "R0801"
        }
    ],
    "stats": {
        "bad_names": {
            "argument": 1,
            "attr": 2,
            "klass": 0,
            "class_attribute": 0,
            "class_const": 0,
            "const": 1,
            "inlinevar": 0,
            "function": 0,
            "method": 0,
            "module": 0,
            "variable": 16,
            "typevar": 0,
            "typealias": 0
        },
        "by_module": {
            "examples.models.scipy.scipy_example": {
                "convention": 5,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 19,
                "warning": 0
            },
            "examples.multi-agent-systems.pingpong.pingpong_mqtt": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 11,
                "warning": 0
            },
            "examples.multi-agent-systems.pingpong.pingpong_multiprocessing": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 15,
                "warning": 0
            },
            "examples.multi-agent-systems.pingpong.pingpong_local_broadcast": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 13,
                "warning": 0
            },
            "examples.multi-agent-systems.pingpong.pingpong_local": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 11,
                "warning": 0
            },
            "examples.multi-agent-systems.pingpong.pingpong_module": {
                "convention": 3,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 29,
                "warning": 0
            },
            "examples.multi-agent-systems.pingpong.pingpong_clonemap": {
                "convention": 3,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 12,
                "warning": 5
            },
            "examples.multi-agent-systems.room_mas.t_sample_simulation_demonstration": {
                "convention": 4,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 51,
                "warning": 4
            },
            "examples.multi-agent-systems.room_mas.view_simulation_in_dashboard": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 6,
                "warning": 0
            },
            "examples.multi-agent-systems.room_mas.room_mas": {
                "convention": 4,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 49,
                "warning": 3
            },
            "examples.getting-started.part_1_my_first_agent_with_comments": {
                "convention": 3,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 22,
                "warning": 2
            },
            "examples.getting-started.part_1_my_first_agent_concise": {
                "convention": 3,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 22,
                "warning": 2
            },
            "examples.getting-started.part_4_communicators_with_comments": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "examples.getting-started.part_3_using_models_with_comments": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "examples.getting-started.part_2_agentvariables_with_comments": {
                "convention": 7,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 38,
                "warning": 1
            },
            "examples.getting-started.part_3_using_models_concise": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "examples.getting-started.part_2_agentvariables_concise": {
                "convention": 6,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 33,
                "warning": 1
            },
            "examples.communicator.mqtt": {
                "convention": 3,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 26,
                "warning": 0
            },
            "examples.simulation.csv_data_source": {
                "convention": 4,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 48,
                "warning": 1
            },
            "examples.plugin.main": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 7,
                "warning": 0
            },
            "examples.plugin.my_plugin.new_module": {
                "convention": 3,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 12,
                "warning": 0
            },
            "examples.plugin.my_plugin.another_new_module": {
                "convention": 3,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 12,
                "warning": 0
            },
            "examples.plugin.my_plugin.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 4,
                "warning": 0
            },
            "examples.controller.bangbang_with_simulator": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 1
            },
            "examples.controller.pid_with_simulator": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 1
            },
            "docs.source.conf": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "docs.source.manual_labor.tools": {
                "convention": 3,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 14,
                "warning": 1
            },
            "tests.test_n_pingpong": {
                "convention": 7,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 110,
                "warning": 1
            },
            "tests.test_agentlogger": {
                "convention": 3,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 83,
                "warning": 12
            },
            "tests.test_data_source": {
                "convention": 13,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 93,
                "warning": 2
            },
            "tests.test_communicator": {
                "convention": 5,
                "error": 1,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "tests.test_simulator": {
                "convention": 26,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 92,
                "warning": 3
            },
            "tests.test_plugins": {
                "convention": 4,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 10,
                "warning": 0
            },
            "tests.test_module": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "tests.test_data_broker": {
                "convention": 12,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 116,
                "warning": 17
            },
            "tests.test_simulator_dashboard": {
                "convention": 6,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 47,
                "warning": 0
            },
            "tests.test_mas": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 10,
                "warning": 0
            },
            "tests.test_examples": {
                "convention": 2,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 60,
                "warning": 1
            },
            "tests.test_databroker_limits": {
                "convention": 11,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 65,
                "warning": 1
            },
            "tests.test_model": {
                "convention": 1,
                "error": 2,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "tests.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "tests.test_utils": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 59,
                "warning": 1
            },
            "tests.test_datamodels": {
                "convention": 4,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 10,
                "statement": 151,
                "warning": 0
            },
            "tests.test_agent": {
                "convention": 14,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 155,
                "warning": 7
            },
            "tests.test_environment": {
                "convention": 0,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 42,
                "warning": 3
            },
            "agentlib.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 6,
                "warning": 0
            },
            "agentlib.models.scipy_model": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 1,
                "statement": 0,
                "warning": 0
            },
            "agentlib.models.fmu_model": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.models.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 15,
                "warning": 0
            },
            "agentlib.utils.plugin_import": {
                "convention": 0,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 30,
                "warning": 2
            },
            "agentlib.utils.load_config": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.local_broadcast_broker": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.validators": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.local_broker": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.fuzzy_matching": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.multi_processing_broker": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.__init__": {
                "convention": 3,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 38,
                "warning": 1
            },
            "agentlib.utils.broker": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 29,
                "warning": 0
            },
            "agentlib.utils.multi_agent_system": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.plotting.simulator_dashboard": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.plotting.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.data_broker": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.agent": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.module": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.logging_": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.environment": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.datamodels": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.model": {
                "convention": 2,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.__init__": {
                "convention": 17,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 6,
                "warning": 0
            },
            "agentlib.core.errors": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 8,
                "warning": 0
            },
            "agentlib.modules.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.utils.try_sensor": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.utils.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 2,
                "warning": 0
            },
            "agentlib.modules.utils.agent_logger": {
                "convention": 2,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 1,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.communicator.communicator": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.communicator.local_broadcast": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 13,
                "warning": 0
            },
            "agentlib.modules.communicator.local": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 17,
                "warning": 0
            },
            "agentlib.modules.communicator.clonemap": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.communicator.local_multiprocessing": {
                "convention": 3,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 61,
                "warning": 1
            },
            "agentlib.modules.communicator.mqtt": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.communicator.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 2,
                "warning": 0
            },
            "agentlib.modules.simulation.simulator": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.simulation.csv_data_source": {
                "convention": 2,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.simulation.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 2,
                "warning": 0
            },
            "agentlib.modules.controller.bangbang": {
                "convention": 1,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 33,
                "warning": 0
            },
            "agentlib.modules.controller.controller": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.controller.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 3,
                "warning": 0
            },
            "agentlib.modules.controller.pid": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 29,
                "statement": 0,
                "warning": 0
            }
        },
        "by_msg": {
            "astroid-error": 35,
            "line-too-long": 19,
            "missing-module-docstring": 31,
            "invalid-name": 20,
            "missing-function-docstring": 60,
            "import-outside-toplevel": 9,
            "import-error": 43,
            "missing-class-docstring": 33,
            "anomalous-backslash-in-string": 12,
            "consider-using-from-import": 1,
            "unspecified-encoding": 7,
            "wrong-import-order": 9,
            "too-many-locals": 2,
            "unused-variable": 6,
            "logging-fstring-interpolation": 5,
            "no-member": 15,
            "missing-final-newline": 1,
            "protected-access": 30,
            "too-many-instance-attributes": 2,
            "unnecessary-dunder-call": 3,
            "wrong-import-position": 9,
            "ungrouped-imports": 25,
            "unused-argument": 3,
            "attribute-defined-outside-init": 6,
            "broad-exception-raised": 3,
            "use-dict-literal": 10,
            "useless-option-value": 2,
            "raise-missing-from": 2,
            "inconsistent-return-statements": 1,
            "duplicate-code": 29
        },
        "code_type_count": {
            "code": 0,
            "comment": 0,
            "docstring": 0,
            "empty": 0,
            "total": 0
        },
        "dependencies": {
            "agentlib.models.scipy_model": [
                "examples.models.scipy.scipy_example",
                "tests.test_model"
            ],
            "pingpong_module": [
                "examples.multi-agent-systems.pingpong.pingpong_local",
                "examples.multi-agent-systems.pingpong.pingpong_mqtt",
                "examples.multi-agent-systems.pingpong.pingpong_local_broadcast",
                "examples.multi-agent-systems.pingpong.pingpong_multiprocessing"
            ],
            "agentlib.utils.multi_agent_system": [
                "examples.multi-agent-systems.pingpong.pingpong_mqtt",
                "tests.test_n_pingpong",
                "agentlib",
                "examples.multi-agent-systems.room_mas.room_mas",
                "examples.multi-agent-systems.room_mas.t_sample_simulation_demonstration",
                "examples.multi-agent-systems.pingpong.pingpong_local",
                "examples.plugin.main"
            ],
            "agentlib.core": [
                "agentlib.modules.controller.bangbang",
                "tests.test_agent",
                "agentlib.modules.communicator.local_multiprocessing",
                "tests.test_model",
                "examples.multi-agent-systems.pingpong.pingpong_multiprocessing",
                "examples.communicator.mqtt",
                "tests.test_n_pingpong",
                "agentlib",
                "examples.multi-agent-systems.pingpong.pingpong_module",
                "examples.multi-agent-systems.pingpong.pingpong_local_broadcast",
                "tests.test_data_broker",
                "tests.test_simulator",
                "tests.test_agentlogger",
                "tests.test_environment"
            ],
            "agentlib.utils": [
                "tests.test_utils",
                "examples.multi-agent-systems.pingpong.pingpong_multiprocessing",
                "tests.test_examples",
                "agentlib.modules.communicator.local_broadcast",
                "tests.test_n_pingpong",
                "agentlib",
                "agentlib.modules.communicator.local"
            ],
            "agentlib.core.datamodels": [
                "tests.test_datamodels",
                "agentlib.modules.controller.bangbang",
                "agentlib.modules.communicator.local_multiprocessing",
                "tests.test_model",
                "agentlib.core",
                "examples.communicator.mqtt",
                "agentlib.modules.communicator.local_broadcast",
                "tests.test_n_pingpong",
                "agentlib",
                "examples.multi-agent-systems.pingpong.pingpong_module",
                "agentlib.modules.communicator.local",
                "tests.test_simulator",
                "tests.test_agentlogger"
            ],
            "agentlib.utils.plotting.simulator_dashboard": [
                "tests.test_simulator_dashboard",
                "examples.multi-agent-systems.room_mas.view_simulation_in_dashboard"
            ],
            "agentlib": [
                "tests.test_utils",
                "docs.source.manual_labor.tools",
                "tests.test_databroker_limits",
                "examples.getting-started.part_2_agentvariables_concise",
                "examples.plugin.my_plugin.new_module",
                "examples.getting-started.part_1_my_first_agent_with_comments",
                "tests.test_communicator",
                "examples.getting-started.part_1_my_first_agent_concise",
                "examples.plugin.my_plugin.another_new_module",
                "tests.test_data_source",
                "examples.simulation.csv_data_source",
                "tests.test_data_broker",
                "examples.getting-started.part_2_agentvariables_with_comments"
            ],
            "agentlib.utils.plugin_import": [
                "agentlib.modules.communicator",
                "agentlib.models",
                "examples.plugin.my_plugin",
                "agentlib.modules.simulation",
                "agentlib.modules.utils",
                "agentlib.modules.controller"
            ],
            "examples.plugin.my_plugin.another_new_module": [
                "examples.plugin.my_plugin"
            ],
            "examples.plugin.my_plugin.new_module": [
                "examples.plugin.my_plugin"
            ],
            "agentlib.modules.utils.agent_logger": [
                "tests.test_agentlogger"
            ],
            "agentlib.modules.simulation.csv_data_source": [
                "tests.test_data_source"
            ],
            "agentlib.modules.communicator.local": [
                "tests.test_communicator"
            ],
            "agentlib.modules.simulation.simulator": [
                "tests.test_simulator"
            ],
            "agentlib.core.logging_": [
                "tests.test_data_broker"
            ],
            "agentlib.utils.local_broadcast_broker": [
                "tests.test_examples",
                "agentlib.utils"
            ],
            "agentlib.models.fmu_model": [
                "tests.test_model"
            ],
            "agentlib.core.agent": [
                "tests.test_utils",
                "tests.test_agent",
                "agentlib.core"
            ],
            "agentlib.core.errors": [
                "tests.test_utils",
                "tests.test_agent"
            ],
            "agentlib.utils.validators": [
                "tests.test_utils"
            ],
            "agentlib.utils.broker": [
                "tests.test_utils"
            ],
            "agentlib.utils.load_config": [
                "tests.test_utils"
            ],
            "agentlib.core.environment": [
                "agentlib.core",
                "tests.test_environment"
            ],
            "agentlib.models": [
                "agentlib"
            ],
            "agentlib.modules": [
                "agentlib"
            ],
            "agentlib.utils.fuzzy_matching": [
                "agentlib.models"
            ],
            "agentlib.utils.local_broker": [
                "agentlib.utils"
            ],
            "agentlib.utils.multi_processing_broker": [
                "agentlib.modules.communicator.local_multiprocessing",
                "agentlib.utils"
            ],
            "agentlib.core.data_broker": [
                "agentlib.core"
            ],
            "agentlib.core.module": [
                "agentlib.core"
            ],
            "agentlib.core.model": [
                "agentlib.core"
            ],
            "agentlib.modules.communicator.communicator": [
                "agentlib.modules.communicator.local_broadcast",
                "agentlib.modules.communicator.local_multiprocessing",
                "agentlib.modules.communicator.local"
            ],
            "agentlib.modules.controller": [
                "agentlib.modules.controller.bangbang"
            ],
            "agentlib.modules.controller.controller": [
                "agentlib.modules.controller"
            ]
        },
        "duplicated_lines": {
            "nb_duplicated_lines": 0,
            "percent_duplicated_lines": 0.0
        },
        "node_count": {
            "function": 23,
            "klass": 61,
            "method": 200,
            "module": 85
        },
        "undocumented": {
            "function": 16,
            "klass": 38,
            "method": 44,
            "module": 31
        },
        "convention": 219,
        "error": 58,
        "fatal": 35,
        "info": 0,
        "refactor": 47,
        "statement": 1992,
        "warning": 74,
        "global_note": 0,
        "nb_duplicated_lines": 379,
        "percent_duplicated_lines": 3.19399966290241
    },
    "previous": {
        "bad_names": {
            "argument": 1,
            "attr": 2,
            "klass": 0,
            "class_attribute": 0,
            "class_const": 0,
            "const": 1,
            "inlinevar": 0,
            "function": 0,
            "method": 0,
            "module": 0,
            "variable": 16,
            "typevar": 0,
            "typealias": 0
        },
        "by_module": {
            "scipy_example": {
                "convention": 5,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 19,
                "warning": 0
            },
            "pingpong_mqtt": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 11,
                "warning": 0
            },
            "pingpong_multiprocessing": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 15,
                "warning": 0
            },
            "pingpong_local_broadcast": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 13,
                "warning": 0
            },
            "pingpong_local": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 11,
                "warning": 0
            },
            "pingpong_module": {
                "convention": 3,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 29,
                "warning": 0
            },
            "pingpong_clonemap": {
                "convention": 3,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 12,
                "warning": 5
            },
            "t_sample_simulation_demonstration": {
                "convention": 4,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 51,
                "warning": 4
            },
            "view_simulation_in_dashboard": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 6,
                "warning": 0
            },
            "room_mas": {
                "convention": 4,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 49,
                "warning": 3
            },
            "part_1_my_first_agent_with_comments": {
                "convention": 3,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 22,
                "warning": 2
            },
            "part_1_my_first_agent_concise": {
                "convention": 3,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 22,
                "warning": 2
            },
            "part_4_communicators_with_comments": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "part_3_using_models_with_comments": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "part_2_agentvariables_with_comments": {
                "convention": 7,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 38,
                "warning": 1
            },
            "part_3_using_models_concise": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "part_2_agentvariables_concise": {
                "convention": 6,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 33,
                "warning": 1
            },
            "examples.communicator.mqtt": {
                "convention": 3,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 26,
                "warning": 0
            },
            "csv_data_source": {
                "convention": 4,
                "error": 4,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 48,
                "warning": 1
            },
            "main": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 7,
                "warning": 0
            },
            "my_plugin.new_module": {
                "convention": 3,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 12,
                "warning": 0
            },
            "my_plugin.another_new_module": {
                "convention": 3,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 12,
                "warning": 0
            },
            "my_plugin.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 4,
                "warning": 0
            },
            "bangbang_with_simulator": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 1
            },
            "pid_with_simulator": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 1
            },
            "docs.source.conf": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "tools": {
                "convention": 3,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 14,
                "warning": 1
            },
            "tests.test_n_pingpong": {
                "convention": 7,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 110,
                "warning": 1
            },
            "tests.test_agentlogger": {
                "convention": 3,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 83,
                "warning": 12
            },
            "tests.test_data_source": {
                "convention": 13,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 93,
                "warning": 2
            },
            "tests.test_communicator": {
                "convention": 5,
                "error": 1,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "tests.test_simulator": {
                "convention": 26,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 92,
                "warning": 3
            },
            "tests.test_plugins": {
                "convention": 4,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 10,
                "warning": 0
            },
            "tests.test_module": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "tests.test_data_broker": {
                "convention": 12,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 116,
                "warning": 17
            },
            "tests.test_simulator_dashboard": {
                "convention": 6,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 47,
                "warning": 0
            },
            "tests.test_mas": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 10,
                "warning": 0
            },
            "tests.test_examples": {
                "convention": 2,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 60,
                "warning": 1
            },
            "tests.test_databroker_limits": {
                "convention": 11,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 65,
                "warning": 1
            },
            "tests.test_model": {
                "convention": 1,
                "error": 2,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "tests.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "tests.test_utils": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 59,
                "warning": 1
            },
            "tests.test_datamodels": {
                "convention": 4,
                "error": 2,
                "fatal": 0,
                "info": 0,
                "refactor": 10,
                "statement": 151,
                "warning": 0
            },
            "tests.test_agent": {
                "convention": 14,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 155,
                "warning": 7
            },
            "tests.test_environment": {
                "convention": 0,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 42,
                "warning": 3
            },
            "agentlib.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 6,
                "warning": 0
            },
            "agentlib.models.scipy_model": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 1,
                "statement": 0,
                "warning": 0
            },
            "agentlib.models.fmu_model": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.models.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 15,
                "warning": 0
            },
            "agentlib.utils.plugin_import": {
                "convention": 0,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 30,
                "warning": 2
            },
            "agentlib.utils.load_config": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.local_broadcast_broker": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.validators": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.local_broker": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.fuzzy_matching": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.multi_processing_broker": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.__init__": {
                "convention": 3,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 38,
                "warning": 1
            },
            "agentlib.utils.broker": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 29,
                "warning": 0
            },
            "agentlib.utils.multi_agent_system": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.plotting.simulator_dashboard": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.utils.plotting.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.data_broker": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.agent": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.module": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.logging_": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.environment": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.datamodels": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.model": {
                "convention": 2,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.core.__init__": {
                "convention": 17,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 6,
                "warning": 0
            },
            "agentlib.core.errors": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 8,
                "warning": 0
            },
            "agentlib.modules.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.utils.try_sensor": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.utils.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 2,
                "warning": 0
            },
            "agentlib.modules.utils.agent_logger": {
                "convention": 2,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 1,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.communicator.communicator": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.communicator.local_broadcast": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 13,
                "warning": 0
            },
            "agentlib.modules.communicator.local": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 17,
                "warning": 0
            },
            "agentlib.modules.communicator.clonemap": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.communicator.local_multiprocessing": {
                "convention": 3,
                "error": 3,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 61,
                "warning": 1
            },
            "agentlib.modules.communicator.mqtt": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.communicator.__init__": {
                "convention": 0,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 2,
                "warning": 0
            },
            "agentlib.modules.simulation.simulator": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.simulation.csv_data_source": {
                "convention": 2,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.simulation.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 2,
                "warning": 0
            },
            "agentlib.modules.controller.bangbang": {
                "convention": 1,
                "error": 1,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 33,
                "warning": 0
            },
            "agentlib.modules.controller.controller": {
                "convention": 0,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 0,
                "statement": 0,
                "warning": 0
            },
            "agentlib.modules.controller.__init__": {
                "convention": 1,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 3,
                "warning": 0
            },
            "agentlib.modules.controller.pid": {
                "convention": 1,
                "error": 0,
                "fatal": 1,
                "info": 0,
                "refactor": 29,
                "statement": 0,
                "warning": 0
            }
        },
        "by_msg": {
            "astroid-error": 35,
            "line-too-long": 19,
            "missing-module-docstring": 31,
            "invalid-name": 20,
            "missing-function-docstring": 60,
            "import-outside-toplevel": 9,
            "import-error": 43,
            "missing-class-docstring": 33,
            "anomalous-backslash-in-string": 12,
            "consider-using-from-import": 1,
            "unspecified-encoding": 7,
            "wrong-import-order": 9,
            "too-many-locals": 2,
            "unused-variable": 6,
            "logging-fstring-interpolation": 5,
            "no-member": 15,
            "missing-final-newline": 1,
            "protected-access": 30,
            "too-many-instance-attributes": 2,
            "unnecessary-dunder-call": 3,
            "wrong-import-position": 9,
            "ungrouped-imports": 25,
            "unused-argument": 3,
            "attribute-defined-outside-init": 6,
            "broad-exception-raised": 3,
            "use-dict-literal": 10,
            "useless-option-value": 2,
            "raise-missing-from": 2,
            "inconsistent-return-statements": 1,
            "duplicate-code": 29
        },
        "code_type_count": {
            "code": 0,
            "comment": 0,
            "docstring": 0,
            "empty": 0,
            "total": 0
        },
        "dependencies": {
            "agentlib.models.scipy_model": [
                "scipy_example",
                "tests.test_model"
            ],
            "pingpong_module": [
                "pingpong_mqtt",
                "pingpong_local_broadcast",
                "pingpong_local",
                "pingpong_multiprocessing"
            ],
            "agentlib.utils.multi_agent_system": [
                "pingpong_local",
                "main",
                "agentlib",
                "tests.test_n_pingpong",
                "pingpong_mqtt",
                "t_sample_simulation_demonstration",
                "room_mas"
            ],
            "agentlib.core": [
                "agentlib.modules.controller.bangbang",
                "tests.test_agent",
                "agentlib.modules.communicator.local_multiprocessing",
                "tests.test_model",
                "pingpong_local_broadcast",
                "examples.communicator.mqtt",
                "agentlib",
                "tests.test_n_pingpong",
                "tests.test_data_broker",
                "pingpong_multiprocessing",
                "tests.test_simulator",
                "tests.test_agentlogger",
                "tests.test_environment",
                "pingpong_module"
            ],
            "agentlib.utils": [
                "tests.test_utils",
                "tests.test_examples",
                "agentlib.modules.communicator.local_broadcast",
                "agentlib",
                "tests.test_n_pingpong",
                "agentlib.modules.communicator.local",
                "pingpong_multiprocessing"
            ],
            "agentlib.core.datamodels": [
                "tests.test_datamodels",
                "agentlib.modules.controller.bangbang",
                "agentlib.modules.communicator.local_multiprocessing",
                "tests.test_model",
                "agentlib.core",
                "examples.communicator.mqtt",
                "agentlib.modules.communicator.local_broadcast",
                "agentlib",
                "tests.test_n_pingpong",
                "agentlib.modules.communicator.local",
                "tests.test_simulator",
                "tests.test_agentlogger",
                "pingpong_module"
            ],
            "agentlib.utils.plotting.simulator_dashboard": [
                "tests.test_simulator_dashboard",
                "view_simulation_in_dashboard"
            ],
            "agentlib": [
                "my_plugin.another_new_module",
                "tests.test_utils",
                "tests.test_databroker_limits",
                "my_plugin.new_module",
                "part_1_my_first_agent_with_comments",
                "csv_data_source",
                "tests.test_communicator",
                "tests.test_data_source",
                "tools",
                "tests.test_data_broker",
                "part_1_my_first_agent_concise",
                "part_2_agentvariables_concise",
                "part_2_agentvariables_with_comments"
            ],
            "agentlib.utils.plugin_import": [
                "agentlib.modules.communicator",
                "agentlib.models",
                "agentlib.modules.simulation",
                "agentlib.modules.utils",
                "my_plugin",
                "agentlib.modules.controller"
            ],
            "my_plugin.another_new_module": [
                "my_plugin"
            ],
            "my_plugin.new_module": [
                "my_plugin"
            ],
            "agentlib.modules.utils.agent_logger": [
                "tests.test_agentlogger"
            ],
            "agentlib.modules.simulation.csv_data_source": [
                "tests.test_data_source"
            ],
            "agentlib.modules.communicator.local": [
                "tests.test_communicator"
            ],
            "agentlib.modules.simulation.simulator": [
                "tests.test_simulator"
            ],
            "agentlib.core.logging_": [
                "tests.test_data_broker"
            ],
            "agentlib.utils.local_broadcast_broker": [
                "tests.test_examples",
                "agentlib.utils"
            ],
            "agentlib.models.fmu_model": [
                "tests.test_model"
            ],
            "agentlib.core.agent": [
                "tests.test_utils",
                "tests.test_agent",
                "agentlib.core"
            ],
            "agentlib.core.errors": [
                "tests.test_utils",
                "tests.test_agent"
            ],
            "agentlib.utils.validators": [
                "tests.test_utils"
            ],
            "agentlib.utils.broker": [
                "tests.test_utils"
            ],
            "agentlib.utils.load_config": [
                "tests.test_utils"
            ],
            "agentlib.core.environment": [
                "agentlib.core",
                "tests.test_environment"
            ],
            "agentlib.models": [
                "agentlib"
            ],
            "agentlib.modules": [
                "agentlib"
            ],
            "agentlib.utils.fuzzy_matching": [
                "agentlib.models"
            ],
            "agentlib.utils.local_broker": [
                "agentlib.utils"
            ],
            "agentlib.utils.multi_processing_broker": [
                "agentlib.modules.communicator.local_multiprocessing",
                "agentlib.utils"
            ],
            "agentlib.core.data_broker": [
                "agentlib.core"
            ],
            "agentlib.core.module": [
                "agentlib.core"
            ],
            "agentlib.core.model": [
                "agentlib.core"
            ],
            "agentlib.modules.communicator.communicator": [
                "agentlib.modules.communicator.local_broadcast",
                "agentlib.modules.communicator.local_multiprocessing",
                "agentlib.modules.communicator.local"
            ],
            "agentlib.modules.controller": [
                "agentlib.modules.controller.bangbang"
            ],
            "agentlib.modules.controller.controller": [
                "agentlib.modules.controller"
            ]
        },
        "duplicated_lines": {
            "nb_duplicated_lines": 0,
            "percent_duplicated_lines": 0.0
        },
        "node_count": {
            "function": 23,
            "klass": 61,
            "method": 200,
            "module": 85
        },
        "undocumented": {
            "function": 16,
            "klass": 38,
            "method": 44,
            "module": 31
        },
        "convention": 219,
        "error": 58,
        "fatal": 35,
        "info": 0,
        "refactor": 47,
        "statement": 1992,
        "warning": 74,
        "global_note": 6.837349397590362,
        "nb_duplicated_lines": 379,
        "percent_duplicated_lines": 3.19399966290241
    }
}
