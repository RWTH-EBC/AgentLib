stages:
  - docker_build
  - release
  - test
  - doc
  - code_quality
  - build
  - deploy


run_example:
  image: registry.git.rwth-aachen.de/ebc/ebc_all/gitlab_ci/templates:python_3.8
  stage: test
  before_script:
    - pip install --upgrade pip
    - test -e requirements.txt && pip install -r requirements.txt || echo no requirements to install
    - test -e setup.py && pip install -e . || echo no setup.py found
  script:
    - python ci/run_examples.py
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - allow_failure: true

variables:
  EXCLUDE_PYTHON: 37, 311
  TEST_ENGINE: unittest
  PYTHON_VERSION: registry.git.rwth-aachen.de/ebc/ebc_all/gitlab_ci/templates:python_3.8

include:
  - local: '/ci/docker_build.gitlab-ci.yml'
  - project: 'ebc/ebc-general/templates/gitlab-ci'
    file: 'python/build/build.gitlab-ci.yml'
  - project: 'ebc/ebc-general/templates/gitlab-ci'
    file: 'python/code-quality/pylint.gitlab-ci.yml'
  - project: 'ebc/ebc-general/templates/gitlab-ci'
    file: 'python/doc/sphinxdoc.gitlab-ci.yml'
  - project: 'ebc/ebc-general/templates/gitlab-ci'
    file: 'pages/gl-pages.gitlab-ci.yml'
  - project: 'ebc/ebc-general/templates/gitlab-ci'
    file: 'python/tests/tests.gitlab-ci.yml'
  - project: 'ebc/ebc-general/templates/gitlab-ci'
    file: 'python/tests/coverage.gitlab-ci.yml'

